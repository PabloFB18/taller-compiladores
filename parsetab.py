
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIDIVIrightIDNUMleftDPARENIPARENSUMA RESTA MULTI DIVI MENOR MENORI MAYOR MAYORI IGUAL DIST ASIGN IPAREN DPAREN ICORCH DCORCH ILLAVE DLLAVE COMA PUNTOC NUM ID RESERVED RETURN INT VOID ELSE WHILE IFprogram : declaration_listdeclaration_list : declaration_list declarationdeclaration_list : declarationdeclaration : var_declarationdeclaration : fun_declarationvar_declaration : type_specifier ID PUNTOCvar_declaration : type_specifier ID ICORCH NUM DCORCH PUNTOCtype_specifier : INTtype_specifier : VOIDfun_declaration : type_specifier ID IPAREN params DPAREN compound_stmtparams : param_listparams : VOIDparam_list : param_list COMA paramparam_list : paramparam : type_specifier IDparam : type_specifier ID ICORCH DCORCHcompound_stmt : ILLAVE local_declarations statement_list DLLAVElocal_declarations : local_declarations var_declarationlocal_declarations :  emptystatement_list : statement_list statementstatement_list : emptystatement : expression_stmtstatement : compound_stmtstatement : selection_stmtstatement : iteration_stmtstatement : return_stmtexpression_stmt : expression PUNTOCexpression_stmt : PUNTOCselection_stmt : IF IPAREN expression DPAREN statementselection_stmt :  IF IPAREN expression DPAREN statement ELSE statementiteration_stmt :  WHILE IPAREN expression DPAREN statementreturn_stmt :  RETURN PUNTOCreturn_stmt :  RETURN expression PUNTOCexpression :  var ASIGN expressionexpression :  simple_expressionvar :  IDvar :  ID ICORCH expression DCORCHsimple_expression :  additive_expression relop additive_expressionsimple_expression :  additive_expressionrelop : MENORIrelop : MENORrelop : MAYORrelop : MAYORIrelop : IGUALrelop : DISTadditive_expression : additive_expression addop termadditive_expression : termaddop : SUMAaddop : RESTAterm : term mulop factorterm : factormulop : MULTImulop : DIVIfactor : IPAREN expression DPARENfactor : varfactor : callfactor : NUMcall : ID IPAREN args DPARENargs : arg_listargs : emptyarg_list : arg_list COMA expressionarg_list : expressionempty :'
    
_lr_action_items = {'MULTI':([42,44,47,48,52,54,82,83,85,93,95,96,],[-56,-57,-51,-55,-36,77,77,-55,-54,-50,-37,-58,]),'RETURN':([13,24,27,30,31,33,34,35,39,45,46,49,50,51,55,56,58,79,80,94,98,99,101,102,103,],[-6,-7,-63,-63,-19,-18,37,-21,-26,-22,-20,-24,-28,-23,-17,-25,-32,-27,-33,37,37,-31,-29,37,-30,]),'VOID':([0,2,5,6,8,10,12,13,22,24,27,28,30,31,33,55,],[4,-5,4,-4,-3,-2,17,-6,4,-7,-63,-10,4,-19,-18,-17,]),'ILLAVE':([13,23,24,27,30,31,33,34,35,39,45,46,49,50,51,55,56,58,79,80,94,98,99,101,102,103,],[-6,27,-7,-63,-63,-19,-18,27,-21,-26,-22,-20,-24,-28,-23,-17,-25,-32,-27,-33,27,27,-31,-29,27,-30,]),'IGUAL':([41,42,44,47,48,52,54,82,83,85,93,95,96,],[66,-56,-57,-51,-55,-36,-47,-46,-55,-54,-50,-37,-58,]),'WHILE':([13,24,27,30,31,33,34,35,39,45,46,49,50,51,55,56,58,79,80,94,98,99,101,102,103,],[-6,-7,-63,-63,-19,-18,38,-21,-26,-22,-20,-24,-28,-23,-17,-25,-32,-27,-33,38,38,-31,-29,38,-30,]),'DCORCH':([14,25,40,41,42,44,47,48,52,54,82,83,84,85,86,87,93,95,96,],[20,29,-35,-39,-56,-57,-51,-55,-36,-47,-46,-55,-38,-54,-34,95,-50,-37,-58,]),'DIST':([41,42,44,47,48,52,54,82,83,85,93,95,96,],[62,-56,-57,-51,-55,-36,-47,-46,-55,-54,-50,-37,-58,]),'RESTA':([41,42,44,47,48,52,54,82,83,84,85,93,95,96,],[69,-56,-57,-51,-55,-36,-47,-46,-55,69,-54,-50,-37,-58,]),'SUMA':([41,42,44,47,48,52,54,82,83,84,85,93,95,96,],[68,-56,-57,-51,-55,-36,-47,-46,-55,68,-54,-50,-37,-58,]),'IPAREN':([9,13,24,27,30,31,33,34,35,37,38,39,43,45,46,49,50,51,52,53,55,56,58,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,94,97,98,99,101,102,103,],[12,-6,-7,-63,-63,-19,-18,43,-21,43,60,-26,43,-22,-20,-24,-28,-23,74,75,-17,-25,-32,43,43,-45,43,-43,-40,-44,-41,-48,-49,-42,43,43,43,43,-53,-52,43,-27,-33,43,43,43,-31,-29,43,-30,]),'NUM':([11,13,24,27,30,31,33,34,35,37,39,43,45,46,49,50,51,55,56,58,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,94,97,98,99,101,102,103,],[14,-6,-7,-63,-63,-19,-18,44,-21,44,-26,44,-22,-20,-24,-28,-23,-17,-25,-32,44,44,-45,44,-43,-40,-44,-41,-48,-49,-42,44,44,44,44,-53,-52,44,-27,-33,44,44,44,-31,-29,44,-30,]),'PUNTOC':([9,13,20,24,27,30,31,33,34,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,79,80,82,83,84,85,86,93,94,95,96,98,99,101,102,103,],[13,-6,24,-7,-63,-63,-19,-18,50,-21,13,58,-26,-35,-39,-56,-57,-22,-20,-51,-55,-24,-28,-23,-36,-47,-17,-25,79,-32,80,-27,-33,-46,-55,-38,-54,-34,-50,50,-37,-58,50,-31,-29,50,-30,]),'MAYOR':([41,42,44,47,48,52,54,82,83,85,93,95,96,],[70,-56,-57,-51,-55,-36,-47,-46,-55,-54,-50,-37,-58,]),'$end':([2,5,6,7,8,10,13,24,28,55,],[-5,-1,-4,0,-3,-2,-6,-7,-10,-17,]),'DIVI':([42,44,47,48,52,54,82,83,85,93,95,96,],[-56,-57,-51,-55,-36,76,76,-55,-54,-50,-37,-58,]),'ICORCH':([9,21,36,52,],[11,25,11,73,]),'DPAREN':([16,17,18,19,21,26,29,40,41,42,44,47,48,52,54,71,74,81,82,83,84,85,86,88,89,90,91,92,93,95,96,100,],[-11,-12,23,-14,-15,-13,-16,-35,-39,-56,-57,-51,-55,-36,-47,85,-63,94,-46,-55,-38,-54,-34,96,-62,-60,-59,98,-50,-37,-58,-61,]),'ELSE':([39,45,49,50,51,55,56,58,79,80,99,101,103,],[-26,-22,-24,-28,-23,-17,-25,-32,-27,-33,-31,-29,-30,]),'COMA':([16,19,21,26,29,40,41,42,44,47,48,52,54,82,83,84,85,86,89,91,93,95,96,100,],[22,-14,-15,-13,-16,-35,-39,-56,-57,-51,-55,-36,-47,-46,-55,-38,-54,-34,-62,97,-50,-37,-58,-61,]),'ASIGN':([48,52,95,],[72,-36,-37,]),'ID':([1,3,4,13,15,17,24,27,30,31,32,33,34,35,37,39,43,45,46,49,50,51,55,56,58,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,94,97,98,99,101,102,103,],[9,-8,-9,-6,21,-9,-7,-63,-63,-19,36,-18,52,-21,52,-26,52,-22,-20,-24,-28,-23,-17,-25,-32,52,52,-45,52,-43,-40,-44,-41,-48,-49,-42,52,52,52,52,-53,-52,52,-27,-33,52,52,52,-31,-29,52,-30,]),'IF':([13,24,27,30,31,33,34,35,39,45,46,49,50,51,55,56,58,79,80,94,98,99,101,102,103,],[-6,-7,-63,-63,-19,-18,53,-21,-26,-22,-20,-24,-28,-23,-17,-25,-32,-27,-33,53,53,-31,-29,53,-30,]),'MAYORI':([41,42,44,47,48,52,54,82,83,85,93,95,96,],[64,-56,-57,-51,-55,-36,-47,-46,-55,-54,-50,-37,-58,]),'DLLAVE':([13,24,27,30,31,33,34,35,39,45,46,49,50,51,55,56,58,79,80,99,101,103,],[-6,-7,-63,-63,-19,-18,55,-21,-26,-22,-20,-24,-28,-23,-17,-25,-32,-27,-33,-31,-29,-30,]),'MENORI':([41,42,44,47,48,52,54,82,83,85,93,95,96,],[65,-56,-57,-51,-55,-36,-47,-46,-55,-54,-50,-37,-58,]),'INT':([0,2,5,6,8,10,12,13,22,24,27,28,30,31,33,55,],[3,-5,3,-4,-3,-2,3,-6,3,-7,-63,-10,3,-19,-18,-17,]),'MENOR':([41,42,44,47,48,52,54,82,83,85,93,95,96,],[67,-56,-57,-51,-55,-36,-47,-46,-55,-54,-50,-37,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'param_list':([12,],[16,]),'return_stmt':([34,94,98,102,],[39,39,39,39,]),'simple_expression':([34,37,43,60,72,73,74,75,94,97,98,102,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'additive_expression':([34,37,43,60,63,72,73,74,75,94,97,98,102,],[41,41,41,41,84,41,41,41,41,41,41,41,41,]),'type_specifier':([0,5,12,22,30,],[1,1,15,15,32,]),'param':([12,22,],[19,26,]),'var_declaration':([0,5,30,],[6,6,33,]),'program':([0,],[7,]),'call':([34,37,43,60,61,63,72,73,74,75,78,94,97,98,102,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'statement':([34,94,98,102,],[46,99,101,103,]),'factor':([34,37,43,60,61,63,72,73,74,75,78,94,97,98,102,],[47,47,47,47,47,47,47,47,47,47,93,47,47,47,47,]),'var':([34,37,43,60,61,63,72,73,74,75,78,94,97,98,102,],[48,48,48,48,83,83,48,48,48,48,83,48,48,48,48,]),'selection_stmt':([34,94,98,102,],[49,49,49,49,]),'compound_stmt':([23,34,94,98,102,],[28,51,51,51,51,]),'empty':([27,30,74,],[31,35,90,]),'arg_list':([74,],[91,]),'addop':([41,84,],[61,61,]),'args':([74,],[88,]),'declaration':([0,5,],[8,10,]),'local_declarations':([27,],[30,]),'term':([34,37,43,60,61,63,72,73,74,75,94,97,98,102,],[54,54,54,54,82,54,54,54,54,54,54,54,54,54,]),'relop':([41,],[63,]),'expression_stmt':([34,94,98,102,],[45,45,45,45,]),'declaration_list':([0,],[5,]),'fun_declaration':([0,5,],[2,2,]),'mulop':([54,82,],[78,78,]),'params':([12,],[18,]),'statement_list':([30,],[34,]),'iteration_stmt':([34,94,98,102,],[56,56,56,56,]),'expression':([34,37,43,60,72,73,74,75,94,97,98,102,],[57,59,71,81,86,87,89,92,57,100,57,57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','parser.py',19),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list1','parser.py',24),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list2','parser.py',37),
  ('declaration -> var_declaration','declaration',1,'p_declaration1','parser.py',42),
  ('declaration -> fun_declaration','declaration',1,'p_declaration2','parser.py',47),
  ('var_declaration -> type_specifier ID PUNTOC','var_declaration',3,'p_var_declaration1','parser.py',52),
  ('var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC','var_declaration',6,'p_var_declaration2','parser.py',57),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier1','parser.py',62),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier2','parser.py',67),
  ('fun_declaration -> type_specifier ID IPAREN params DPAREN compound_stmt','fun_declaration',6,'p_fun_declaration','parser.py',72),
  ('params -> param_list','params',1,'p_params1','parser.py',77),
  ('params -> VOID','params',1,'p_params2','parser.py',82),
  ('param_list -> param_list COMA param','param_list',3,'p_param_list1','parser.py',87),
  ('param_list -> param','param_list',1,'p_param_list2','parser.py',100),
  ('param -> type_specifier ID','param',2,'p_param1','parser.py',105),
  ('param -> type_specifier ID ICORCH DCORCH','param',4,'p_param2','parser.py',110),
  ('compound_stmt -> ILLAVE local_declarations statement_list DLLAVE','compound_stmt',4,'p_compound_stmt','parser.py',115),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations1','parser.py',120),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations_empty','parser.py',133),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list1','parser.py',138),
  ('statement_list -> empty','statement_list',1,'p_statement_list_empty','parser.py',151),
  ('statement -> expression_stmt','statement',1,'p_statement1','parser.py',156),
  ('statement -> compound_stmt','statement',1,'p_statement2','parser.py',161),
  ('statement -> selection_stmt','statement',1,'p_statement3','parser.py',166),
  ('statement -> iteration_stmt','statement',1,'p_statement4','parser.py',171),
  ('statement -> return_stmt','statement',1,'p_statement5','parser.py',176),
  ('expression_stmt -> expression PUNTOC','expression_stmt',2,'p_expression_stmt1','parser.py',181),
  ('expression_stmt -> PUNTOC','expression_stmt',1,'p_expression_stmt2','parser.py',186),
  ('selection_stmt -> IF IPAREN expression DPAREN statement','selection_stmt',5,'p_selection_stmt1','parser.py',191),
  ('selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement','selection_stmt',7,'p_selection_stmt2','parser.py',196),
  ('iteration_stmt -> WHILE IPAREN expression DPAREN statement','iteration_stmt',5,'p_iteration_stmt','parser.py',201),
  ('return_stmt -> RETURN PUNTOC','return_stmt',2,'p_return_stmt1','parser.py',206),
  ('return_stmt -> RETURN expression PUNTOC','return_stmt',3,'p_return_stmt2','parser.py',211),
  ('expression -> var ASIGN expression','expression',3,'p_expression1','parser.py',216),
  ('expression -> simple_expression','expression',1,'p_expression2','parser.py',234),
  ('var -> ID','var',1,'p_var1','parser.py',239),
  ('var -> ID ICORCH expression DCORCH','var',4,'p_var2','parser.py',244),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression1','parser.py',249),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression2','parser.py',254),
  ('relop -> MENORI','relop',1,'p_relop1','parser.py',259),
  ('relop -> MENOR','relop',1,'p_relop2','parser.py',263),
  ('relop -> MAYOR','relop',1,'p_relop3','parser.py',267),
  ('relop -> MAYORI','relop',1,'p_relop4','parser.py',271),
  ('relop -> IGUAL','relop',1,'p_relop5','parser.py',275),
  ('relop -> DIST','relop',1,'p_relop6','parser.py',279),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression1','parser.py',283),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression2','parser.py',287),
  ('addop -> SUMA','addop',1,'p_addop1','parser.py',291),
  ('addop -> RESTA','addop',1,'p_addop2','parser.py',295),
  ('term -> term mulop factor','term',3,'p_term1','parser.py',299),
  ('term -> factor','term',1,'p_term2','parser.py',303),
  ('mulop -> MULTI','mulop',1,'p_mulop1','parser.py',307),
  ('mulop -> DIVI','mulop',1,'p_mulop2','parser.py',311),
  ('factor -> IPAREN expression DPAREN','factor',3,'p_factor1','parser.py',315),
  ('factor -> var','factor',1,'p_factor2','parser.py',319),
  ('factor -> call','factor',1,'p_factor3','parser.py',323),
  ('factor -> NUM','factor',1,'p_factor4','parser.py',327),
  ('call -> ID IPAREN args DPAREN','call',4,'p_call','parser.py',331),
  ('args -> arg_list','args',1,'p_args1','parser.py',335),
  ('args -> empty','args',1,'p_args_empty','parser.py',339),
  ('arg_list -> arg_list COMA expression','arg_list',3,'p_arg_list1','parser.py',343),
  ('arg_list -> expression','arg_list',1,'p_arg_list2','parser.py',347),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',351),
]
