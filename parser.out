Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    RESERVED

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     var_declaration -> type_specifier ID PUNTOC
Rule 7     var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC
Rule 8     type_specifier -> INT
Rule 9     type_specifier -> VOID
Rule 10    fun_declaration -> type_specifier ID IPAREN params DPAREN compound_stmt
Rule 11    params -> param_list
Rule 12    params -> VOID
Rule 13    param_list -> param_list COMA param
Rule 14    param_list -> param
Rule 15    param -> type_specifier ID
Rule 16    param -> type_specifier ID ICORCH DCORCH
Rule 17    compound_stmt -> ILLAVE local_declarations statement_list DLLAVE
Rule 18    local_declarations -> local_declarations var_declaration
Rule 19    local_declarations -> empty
Rule 20    statement_list -> statement_list statement
Rule 21    statement_list -> empty
Rule 22    statement -> expression_stmt
Rule 23    statement -> compound_stmt
Rule 24    statement -> selection_stmt
Rule 25    statement -> iteration_stmt
Rule 26    statement -> return_stmt
Rule 27    expression_stmt -> expression PUNTOC
Rule 28    expression_stmt -> PUNTOC
Rule 29    selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement
Rule 30    iteration_stmt -> WHILE IPAREN expression DPAREN statement
Rule 31    return_stmt -> RETURN PUNTOC
Rule 32    return_stmt -> RETURN expression PUNTOC
Rule 33    expression -> var ASIGN expression
Rule 34    expression -> simple_expression
Rule 35    var -> ID
Rule 36    var -> ID ICORCH expression DCORCH
Rule 37    simple_expression -> additive_expression relop additive_expression
Rule 38    simple_expression -> additive_expression
Rule 39    relop -> MENORI
Rule 40    relop -> MENOR
Rule 41    relop -> MAYOR
Rule 42    relop -> MAYORI
Rule 43    relop -> IGUAL
Rule 44    relop -> DIST
Rule 45    additive_expression -> additive_expression addop term
Rule 46    additive_expression -> term
Rule 47    addop -> SUMA
Rule 48    addop -> RESTA
Rule 49    term -> term mulop factor
Rule 50    term -> factor
Rule 51    mulop -> MULTI
Rule 52    mulop -> DIVI
Rule 53    factor -> IPAREN expression DPAREN
Rule 54    factor -> var
Rule 55    factor -> call
Rule 56    factor -> NUM
Rule 57    call -> ID IPAREN args DPAREN
Rule 58    args -> arg_list
Rule 59    args -> empty
Rule 60    arg_list -> arg_list COMA expression
Rule 61    arg_list -> expression
Rule 62    empty -> <empty>

Terminals, with rules where they appear

ASIGN                : 33
COMA                 : 13 60
DCORCH               : 7 16 36
DIST                 : 44
DIVI                 : 52
DLLAVE               : 17
DPAREN               : 10 29 30 53 57
ELSE                 : 29
ICORCH               : 7 16 36
ID                   : 6 7 10 15 16 35 36 57
IF                   : 29
IGUAL                : 43
ILLAVE               : 17
INT                  : 8
IPAREN               : 10 29 30 53 57
MAYOR                : 41
MAYORI               : 42
MENOR                : 40
MENORI               : 39
MULTI                : 51
NUM                  : 7 56
PUNTOC               : 6 7 27 28 31 32
RESERVED             : 
RESTA                : 48
RETURN               : 31 32
SUMA                 : 47
VOID                 : 9 12
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

additive_expression  : 37 37 38 45
addop                : 45
arg_list             : 58 60
args                 : 57
call                 : 55
compound_stmt        : 10 23
declaration          : 2 3
declaration_list     : 1 2
empty                : 19 21 59
expression           : 27 29 30 32 33 36 53 60 61
expression_stmt      : 22
factor               : 49 50
fun_declaration      : 5
iteration_stmt       : 25
local_declarations   : 17 18
mulop                : 49
param                : 13 14
param_list           : 11 13
params               : 10
program              : 0
relop                : 37
return_stmt          : 26
selection_stmt       : 24
simple_expression    : 34
statement            : 20 29 29 30
statement_list       : 17 20
term                 : 45 46 49
type_specifier       : 6 7 10 15 16
var                  : 33 54
var_declaration      : 4 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) var_declaration -> . type_specifier ID PUNTOC
    (7) var_declaration -> . type_specifier ID ICORCH NUM DCORCH PUNTOC
    (10) fun_declaration -> . type_specifier ID IPAREN params DPAREN compound_stmt
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID

    INT             shift and go to state 3
    VOID            shift and go to state 4

    type_specifier                 shift and go to state 1
    fun_declaration                shift and go to state 2
    declaration_list               shift and go to state 5
    var_declaration                shift and go to state 6
    program                        shift and go to state 7
    declaration                    shift and go to state 8

state 1

    (6) var_declaration -> type_specifier . ID PUNTOC
    (7) var_declaration -> type_specifier . ID ICORCH NUM DCORCH PUNTOC
    (10) fun_declaration -> type_specifier . ID IPAREN params DPAREN compound_stmt

    ID              shift and go to state 9


state 2

    (5) declaration -> fun_declaration .

    INT             reduce using rule 5 (declaration -> fun_declaration .)
    VOID            reduce using rule 5 (declaration -> fun_declaration .)
    $end            reduce using rule 5 (declaration -> fun_declaration .)


state 3

    (8) type_specifier -> INT .

    ID              reduce using rule 8 (type_specifier -> INT .)


state 4

    (9) type_specifier -> VOID .

    ID              reduce using rule 9 (type_specifier -> VOID .)


state 5

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) var_declaration -> . type_specifier ID PUNTOC
    (7) var_declaration -> . type_specifier ID ICORCH NUM DCORCH PUNTOC
    (10) fun_declaration -> . type_specifier ID IPAREN params DPAREN compound_stmt
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID

    $end            reduce using rule 1 (program -> declaration_list .)
    INT             shift and go to state 3
    VOID            shift and go to state 4

    type_specifier                 shift and go to state 1
    fun_declaration                shift and go to state 2
    var_declaration                shift and go to state 6
    declaration                    shift and go to state 10

state 6

    (4) declaration -> var_declaration .

    INT             reduce using rule 4 (declaration -> var_declaration .)
    VOID            reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)


state 7

    (0) S' -> program .



state 8

    (3) declaration_list -> declaration .

    INT             reduce using rule 3 (declaration_list -> declaration .)
    VOID            reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 9

    (6) var_declaration -> type_specifier ID . PUNTOC
    (7) var_declaration -> type_specifier ID . ICORCH NUM DCORCH PUNTOC
    (10) fun_declaration -> type_specifier ID . IPAREN params DPAREN compound_stmt

    PUNTOC          shift and go to state 13
    ICORCH          shift and go to state 11
    IPAREN          shift and go to state 12


state 10

    (2) declaration_list -> declaration_list declaration .

    INT             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 11

    (7) var_declaration -> type_specifier ID ICORCH . NUM DCORCH PUNTOC

    NUM             shift and go to state 14


state 12

    (10) fun_declaration -> type_specifier ID IPAREN . params DPAREN compound_stmt
    (11) params -> . param_list
    (12) params -> . VOID
    (13) param_list -> . param_list COMA param
    (14) param_list -> . param
    (15) param -> . type_specifier ID
    (16) param -> . type_specifier ID ICORCH DCORCH
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID

    VOID            shift and go to state 17
    INT             shift and go to state 3

    param_list                     shift and go to state 16
    type_specifier                 shift and go to state 15
    params                         shift and go to state 18
    param                          shift and go to state 19

state 13

    (6) var_declaration -> type_specifier ID PUNTOC .

    INT             reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    VOID            reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    $end            reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    DLLAVE          reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    PUNTOC          reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    ILLAVE          reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    IF              reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    WHILE           reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    RETURN          reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    ID              reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    IPAREN          reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)
    NUM             reduce using rule 6 (var_declaration -> type_specifier ID PUNTOC .)


state 14

    (7) var_declaration -> type_specifier ID ICORCH NUM . DCORCH PUNTOC

    DCORCH          shift and go to state 20


state 15

    (15) param -> type_specifier . ID
    (16) param -> type_specifier . ID ICORCH DCORCH

    ID              shift and go to state 21


state 16

    (11) params -> param_list .
    (13) param_list -> param_list . COMA param

    DPAREN          reduce using rule 11 (params -> param_list .)
    COMA            shift and go to state 22


state 17

    (12) params -> VOID .
    (9) type_specifier -> VOID .

    DPAREN          reduce using rule 12 (params -> VOID .)
    ID              reduce using rule 9 (type_specifier -> VOID .)


state 18

    (10) fun_declaration -> type_specifier ID IPAREN params . DPAREN compound_stmt

    DPAREN          shift and go to state 23


state 19

    (14) param_list -> param .

    COMA            reduce using rule 14 (param_list -> param .)
    DPAREN          reduce using rule 14 (param_list -> param .)


state 20

    (7) var_declaration -> type_specifier ID ICORCH NUM DCORCH . PUNTOC

    PUNTOC          shift and go to state 24


state 21

    (15) param -> type_specifier ID .
    (16) param -> type_specifier ID . ICORCH DCORCH

    COMA            reduce using rule 15 (param -> type_specifier ID .)
    DPAREN          reduce using rule 15 (param -> type_specifier ID .)
    ICORCH          shift and go to state 25


state 22

    (13) param_list -> param_list COMA . param
    (15) param -> . type_specifier ID
    (16) param -> . type_specifier ID ICORCH DCORCH
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID

    INT             shift and go to state 3
    VOID            shift and go to state 4

    type_specifier                 shift and go to state 15
    param                          shift and go to state 26

state 23

    (10) fun_declaration -> type_specifier ID IPAREN params DPAREN . compound_stmt
    (17) compound_stmt -> . ILLAVE local_declarations statement_list DLLAVE

    ILLAVE          shift and go to state 27

    compound_stmt                  shift and go to state 28

state 24

    (7) var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .

    INT             reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    VOID            reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    $end            reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    DLLAVE          reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    PUNTOC          reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    ILLAVE          reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    IF              reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    WHILE           reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    RETURN          reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    ID              reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    IPAREN          reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)
    NUM             reduce using rule 7 (var_declaration -> type_specifier ID ICORCH NUM DCORCH PUNTOC .)


state 25

    (16) param -> type_specifier ID ICORCH . DCORCH

    DCORCH          shift and go to state 29


state 26

    (13) param_list -> param_list COMA param .

    COMA            reduce using rule 13 (param_list -> param_list COMA param .)
    DPAREN          reduce using rule 13 (param_list -> param_list COMA param .)


state 27

    (17) compound_stmt -> ILLAVE . local_declarations statement_list DLLAVE
    (18) local_declarations -> . local_declarations var_declaration
    (19) local_declarations -> . empty
    (62) empty -> .

    INT             reduce using rule 62 (empty -> .)
    VOID            reduce using rule 62 (empty -> .)
    DLLAVE          reduce using rule 62 (empty -> .)
    PUNTOC          reduce using rule 62 (empty -> .)
    ILLAVE          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    WHILE           reduce using rule 62 (empty -> .)
    RETURN          reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)
    IPAREN          reduce using rule 62 (empty -> .)
    NUM             reduce using rule 62 (empty -> .)

    local_declarations             shift and go to state 30
    empty                          shift and go to state 31

state 28

    (10) fun_declaration -> type_specifier ID IPAREN params DPAREN compound_stmt .

    INT             reduce using rule 10 (fun_declaration -> type_specifier ID IPAREN params DPAREN compound_stmt .)
    VOID            reduce using rule 10 (fun_declaration -> type_specifier ID IPAREN params DPAREN compound_stmt .)
    $end            reduce using rule 10 (fun_declaration -> type_specifier ID IPAREN params DPAREN compound_stmt .)


state 29

    (16) param -> type_specifier ID ICORCH DCORCH .

    COMA            reduce using rule 16 (param -> type_specifier ID ICORCH DCORCH .)
    DPAREN          reduce using rule 16 (param -> type_specifier ID ICORCH DCORCH .)


state 30

    (17) compound_stmt -> ILLAVE local_declarations . statement_list DLLAVE
    (18) local_declarations -> local_declarations . var_declaration
    (20) statement_list -> . statement_list statement
    (21) statement_list -> . empty
    (6) var_declaration -> . type_specifier ID PUNTOC
    (7) var_declaration -> . type_specifier ID ICORCH NUM DCORCH PUNTOC
    (62) empty -> .
    (8) type_specifier -> . INT
    (9) type_specifier -> . VOID

    DLLAVE          reduce using rule 62 (empty -> .)
    PUNTOC          reduce using rule 62 (empty -> .)
    ILLAVE          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    WHILE           reduce using rule 62 (empty -> .)
    RETURN          reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)
    IPAREN          reduce using rule 62 (empty -> .)
    NUM             reduce using rule 62 (empty -> .)
    INT             shift and go to state 3
    VOID            shift and go to state 4

    type_specifier                 shift and go to state 32
    var_declaration                shift and go to state 33
    statement_list                 shift and go to state 34
    empty                          shift and go to state 35

state 31

    (19) local_declarations -> empty .

    INT             reduce using rule 19 (local_declarations -> empty .)
    VOID            reduce using rule 19 (local_declarations -> empty .)
    DLLAVE          reduce using rule 19 (local_declarations -> empty .)
    PUNTOC          reduce using rule 19 (local_declarations -> empty .)
    ILLAVE          reduce using rule 19 (local_declarations -> empty .)
    IF              reduce using rule 19 (local_declarations -> empty .)
    WHILE           reduce using rule 19 (local_declarations -> empty .)
    RETURN          reduce using rule 19 (local_declarations -> empty .)
    ID              reduce using rule 19 (local_declarations -> empty .)
    IPAREN          reduce using rule 19 (local_declarations -> empty .)
    NUM             reduce using rule 19 (local_declarations -> empty .)


state 32

    (6) var_declaration -> type_specifier . ID PUNTOC
    (7) var_declaration -> type_specifier . ID ICORCH NUM DCORCH PUNTOC

    ID              shift and go to state 36


state 33

    (18) local_declarations -> local_declarations var_declaration .

    INT             reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    VOID            reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    DLLAVE          reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    PUNTOC          reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    ILLAVE          reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    ID              reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    IPAREN          reduce using rule 18 (local_declarations -> local_declarations var_declaration .)
    NUM             reduce using rule 18 (local_declarations -> local_declarations var_declaration .)


state 34

    (17) compound_stmt -> ILLAVE local_declarations statement_list . DLLAVE
    (20) statement_list -> statement_list . statement
    (22) statement -> . expression_stmt
    (23) statement -> . compound_stmt
    (24) statement -> . selection_stmt
    (25) statement -> . iteration_stmt
    (26) statement -> . return_stmt
    (27) expression_stmt -> . expression PUNTOC
    (28) expression_stmt -> . PUNTOC
    (17) compound_stmt -> . ILLAVE local_declarations statement_list DLLAVE
    (29) selection_stmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (30) iteration_stmt -> . WHILE IPAREN expression DPAREN statement
    (31) return_stmt -> . RETURN PUNTOC
    (32) return_stmt -> . RETURN expression PUNTOC
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    DLLAVE          shift and go to state 55
    PUNTOC          shift and go to state 50
    ILLAVE          shift and go to state 27
    IF              shift and go to state 53
    WHILE           shift and go to state 38
    RETURN          shift and go to state 37
    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    return_stmt                    shift and go to state 39
    call                           shift and go to state 42
    factor                         shift and go to state 47
    iteration_stmt                 shift and go to state 56
    var                            shift and go to state 48
    expression_stmt                shift and go to state 45
    statement                      shift and go to state 46
    selection_stmt                 shift and go to state 49
    simple_expression              shift and go to state 40
    expression                     shift and go to state 57
    compound_stmt                  shift and go to state 51
    additive_expression            shift and go to state 41

state 35

    (21) statement_list -> empty .

    DLLAVE          reduce using rule 21 (statement_list -> empty .)
    PUNTOC          reduce using rule 21 (statement_list -> empty .)
    ILLAVE          reduce using rule 21 (statement_list -> empty .)
    IF              reduce using rule 21 (statement_list -> empty .)
    WHILE           reduce using rule 21 (statement_list -> empty .)
    RETURN          reduce using rule 21 (statement_list -> empty .)
    ID              reduce using rule 21 (statement_list -> empty .)
    IPAREN          reduce using rule 21 (statement_list -> empty .)
    NUM             reduce using rule 21 (statement_list -> empty .)


state 36

    (6) var_declaration -> type_specifier ID . PUNTOC
    (7) var_declaration -> type_specifier ID . ICORCH NUM DCORCH PUNTOC

    PUNTOC          shift and go to state 13
    ICORCH          shift and go to state 11


state 37

    (31) return_stmt -> RETURN . PUNTOC
    (32) return_stmt -> RETURN . expression PUNTOC
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    PUNTOC          shift and go to state 58
    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 59
    additive_expression            shift and go to state 41

state 38

    (30) iteration_stmt -> WHILE . IPAREN expression DPAREN statement

    IPAREN          shift and go to state 60


state 39

    (26) statement -> return_stmt .

    ELSE            reduce using rule 26 (statement -> return_stmt .)
    DLLAVE          reduce using rule 26 (statement -> return_stmt .)
    PUNTOC          reduce using rule 26 (statement -> return_stmt .)
    ILLAVE          reduce using rule 26 (statement -> return_stmt .)
    IF              reduce using rule 26 (statement -> return_stmt .)
    WHILE           reduce using rule 26 (statement -> return_stmt .)
    RETURN          reduce using rule 26 (statement -> return_stmt .)
    ID              reduce using rule 26 (statement -> return_stmt .)
    IPAREN          reduce using rule 26 (statement -> return_stmt .)
    NUM             reduce using rule 26 (statement -> return_stmt .)


state 40

    (34) expression -> simple_expression .

    DPAREN          reduce using rule 34 (expression -> simple_expression .)
    PUNTOC          reduce using rule 34 (expression -> simple_expression .)
    DCORCH          reduce using rule 34 (expression -> simple_expression .)
    COMA            reduce using rule 34 (expression -> simple_expression .)


state 41

    (37) simple_expression -> additive_expression . relop additive_expression
    (38) simple_expression -> additive_expression .
    (45) additive_expression -> additive_expression . addop term
    (39) relop -> . MENORI
    (40) relop -> . MENOR
    (41) relop -> . MAYOR
    (42) relop -> . MAYORI
    (43) relop -> . IGUAL
    (44) relop -> . DIST
    (47) addop -> . SUMA
    (48) addop -> . RESTA

    PUNTOC          reduce using rule 38 (simple_expression -> additive_expression .)
    DCORCH          reduce using rule 38 (simple_expression -> additive_expression .)
    DPAREN          reduce using rule 38 (simple_expression -> additive_expression .)
    COMA            reduce using rule 38 (simple_expression -> additive_expression .)
    MENORI          shift and go to state 65
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 70
    MAYORI          shift and go to state 64
    IGUAL           shift and go to state 66
    DIST            shift and go to state 62
    SUMA            shift and go to state 68
    RESTA           shift and go to state 69

    addop                          shift and go to state 61
    relop                          shift and go to state 63

state 42

    (55) factor -> call .

    MULTI           reduce using rule 55 (factor -> call .)
    DIVI            reduce using rule 55 (factor -> call .)
    MENORI          reduce using rule 55 (factor -> call .)
    MENOR           reduce using rule 55 (factor -> call .)
    MAYOR           reduce using rule 55 (factor -> call .)
    MAYORI          reduce using rule 55 (factor -> call .)
    IGUAL           reduce using rule 55 (factor -> call .)
    DIST            reduce using rule 55 (factor -> call .)
    SUMA            reduce using rule 55 (factor -> call .)
    RESTA           reduce using rule 55 (factor -> call .)
    COMA            reduce using rule 55 (factor -> call .)
    DPAREN          reduce using rule 55 (factor -> call .)
    PUNTOC          reduce using rule 55 (factor -> call .)
    DCORCH          reduce using rule 55 (factor -> call .)


state 43

    (53) factor -> IPAREN . expression DPAREN
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 71
    additive_expression            shift and go to state 41

state 44

    (56) factor -> NUM .

    MULTI           reduce using rule 56 (factor -> NUM .)
    DIVI            reduce using rule 56 (factor -> NUM .)
    MENORI          reduce using rule 56 (factor -> NUM .)
    MENOR           reduce using rule 56 (factor -> NUM .)
    MAYOR           reduce using rule 56 (factor -> NUM .)
    MAYORI          reduce using rule 56 (factor -> NUM .)
    IGUAL           reduce using rule 56 (factor -> NUM .)
    DIST            reduce using rule 56 (factor -> NUM .)
    SUMA            reduce using rule 56 (factor -> NUM .)
    RESTA           reduce using rule 56 (factor -> NUM .)
    COMA            reduce using rule 56 (factor -> NUM .)
    DPAREN          reduce using rule 56 (factor -> NUM .)
    PUNTOC          reduce using rule 56 (factor -> NUM .)
    DCORCH          reduce using rule 56 (factor -> NUM .)


state 45

    (22) statement -> expression_stmt .

    ELSE            reduce using rule 22 (statement -> expression_stmt .)
    DLLAVE          reduce using rule 22 (statement -> expression_stmt .)
    PUNTOC          reduce using rule 22 (statement -> expression_stmt .)
    ILLAVE          reduce using rule 22 (statement -> expression_stmt .)
    IF              reduce using rule 22 (statement -> expression_stmt .)
    WHILE           reduce using rule 22 (statement -> expression_stmt .)
    RETURN          reduce using rule 22 (statement -> expression_stmt .)
    ID              reduce using rule 22 (statement -> expression_stmt .)
    IPAREN          reduce using rule 22 (statement -> expression_stmt .)
    NUM             reduce using rule 22 (statement -> expression_stmt .)


state 46

    (20) statement_list -> statement_list statement .

    DLLAVE          reduce using rule 20 (statement_list -> statement_list statement .)
    PUNTOC          reduce using rule 20 (statement_list -> statement_list statement .)
    ILLAVE          reduce using rule 20 (statement_list -> statement_list statement .)
    IF              reduce using rule 20 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 20 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 20 (statement_list -> statement_list statement .)
    ID              reduce using rule 20 (statement_list -> statement_list statement .)
    IPAREN          reduce using rule 20 (statement_list -> statement_list statement .)
    NUM             reduce using rule 20 (statement_list -> statement_list statement .)


state 47

    (50) term -> factor .

    MULTI           reduce using rule 50 (term -> factor .)
    DIVI            reduce using rule 50 (term -> factor .)
    MENORI          reduce using rule 50 (term -> factor .)
    MENOR           reduce using rule 50 (term -> factor .)
    MAYOR           reduce using rule 50 (term -> factor .)
    MAYORI          reduce using rule 50 (term -> factor .)
    IGUAL           reduce using rule 50 (term -> factor .)
    DIST            reduce using rule 50 (term -> factor .)
    SUMA            reduce using rule 50 (term -> factor .)
    RESTA           reduce using rule 50 (term -> factor .)
    DPAREN          reduce using rule 50 (term -> factor .)
    PUNTOC          reduce using rule 50 (term -> factor .)
    DCORCH          reduce using rule 50 (term -> factor .)
    COMA            reduce using rule 50 (term -> factor .)


state 48

    (33) expression -> var . ASIGN expression
    (54) factor -> var .

    ASIGN           shift and go to state 72
    MULTI           reduce using rule 54 (factor -> var .)
    DIVI            reduce using rule 54 (factor -> var .)
    MENORI          reduce using rule 54 (factor -> var .)
    MENOR           reduce using rule 54 (factor -> var .)
    MAYOR           reduce using rule 54 (factor -> var .)
    MAYORI          reduce using rule 54 (factor -> var .)
    IGUAL           reduce using rule 54 (factor -> var .)
    DIST            reduce using rule 54 (factor -> var .)
    SUMA            reduce using rule 54 (factor -> var .)
    RESTA           reduce using rule 54 (factor -> var .)
    COMA            reduce using rule 54 (factor -> var .)
    DPAREN          reduce using rule 54 (factor -> var .)
    PUNTOC          reduce using rule 54 (factor -> var .)
    DCORCH          reduce using rule 54 (factor -> var .)


state 49

    (24) statement -> selection_stmt .

    ELSE            reduce using rule 24 (statement -> selection_stmt .)
    DLLAVE          reduce using rule 24 (statement -> selection_stmt .)
    PUNTOC          reduce using rule 24 (statement -> selection_stmt .)
    ILLAVE          reduce using rule 24 (statement -> selection_stmt .)
    IF              reduce using rule 24 (statement -> selection_stmt .)
    WHILE           reduce using rule 24 (statement -> selection_stmt .)
    RETURN          reduce using rule 24 (statement -> selection_stmt .)
    ID              reduce using rule 24 (statement -> selection_stmt .)
    IPAREN          reduce using rule 24 (statement -> selection_stmt .)
    NUM             reduce using rule 24 (statement -> selection_stmt .)


state 50

    (28) expression_stmt -> PUNTOC .

    DLLAVE          reduce using rule 28 (expression_stmt -> PUNTOC .)
    PUNTOC          reduce using rule 28 (expression_stmt -> PUNTOC .)
    ILLAVE          reduce using rule 28 (expression_stmt -> PUNTOC .)
    IF              reduce using rule 28 (expression_stmt -> PUNTOC .)
    WHILE           reduce using rule 28 (expression_stmt -> PUNTOC .)
    RETURN          reduce using rule 28 (expression_stmt -> PUNTOC .)
    ID              reduce using rule 28 (expression_stmt -> PUNTOC .)
    IPAREN          reduce using rule 28 (expression_stmt -> PUNTOC .)
    NUM             reduce using rule 28 (expression_stmt -> PUNTOC .)
    ELSE            reduce using rule 28 (expression_stmt -> PUNTOC .)


state 51

    (23) statement -> compound_stmt .

    ELSE            reduce using rule 23 (statement -> compound_stmt .)
    DLLAVE          reduce using rule 23 (statement -> compound_stmt .)
    PUNTOC          reduce using rule 23 (statement -> compound_stmt .)
    ILLAVE          reduce using rule 23 (statement -> compound_stmt .)
    IF              reduce using rule 23 (statement -> compound_stmt .)
    WHILE           reduce using rule 23 (statement -> compound_stmt .)
    RETURN          reduce using rule 23 (statement -> compound_stmt .)
    ID              reduce using rule 23 (statement -> compound_stmt .)
    IPAREN          reduce using rule 23 (statement -> compound_stmt .)
    NUM             reduce using rule 23 (statement -> compound_stmt .)


state 52

    (35) var -> ID .
    (36) var -> ID . ICORCH expression DCORCH
    (57) call -> ID . IPAREN args DPAREN

    ASIGN           reduce using rule 35 (var -> ID .)
    MULTI           reduce using rule 35 (var -> ID .)
    DIVI            reduce using rule 35 (var -> ID .)
    MENORI          reduce using rule 35 (var -> ID .)
    MENOR           reduce using rule 35 (var -> ID .)
    MAYOR           reduce using rule 35 (var -> ID .)
    MAYORI          reduce using rule 35 (var -> ID .)
    IGUAL           reduce using rule 35 (var -> ID .)
    DIST            reduce using rule 35 (var -> ID .)
    SUMA            reduce using rule 35 (var -> ID .)
    RESTA           reduce using rule 35 (var -> ID .)
    PUNTOC          reduce using rule 35 (var -> ID .)
    DPAREN          reduce using rule 35 (var -> ID .)
    DCORCH          reduce using rule 35 (var -> ID .)
    COMA            reduce using rule 35 (var -> ID .)
    ICORCH          shift and go to state 73
    IPAREN          shift and go to state 74


state 53

    (29) selection_stmt -> IF . IPAREN expression DPAREN statement ELSE statement

    IPAREN          shift and go to state 75


state 54

    (46) additive_expression -> term .
    (49) term -> term . mulop factor
    (51) mulop -> . MULTI
    (52) mulop -> . DIVI

    MENORI          reduce using rule 46 (additive_expression -> term .)
    MENOR           reduce using rule 46 (additive_expression -> term .)
    MAYOR           reduce using rule 46 (additive_expression -> term .)
    MAYORI          reduce using rule 46 (additive_expression -> term .)
    IGUAL           reduce using rule 46 (additive_expression -> term .)
    DIST            reduce using rule 46 (additive_expression -> term .)
    SUMA            reduce using rule 46 (additive_expression -> term .)
    RESTA           reduce using rule 46 (additive_expression -> term .)
    DPAREN          reduce using rule 46 (additive_expression -> term .)
    PUNTOC          reduce using rule 46 (additive_expression -> term .)
    DCORCH          reduce using rule 46 (additive_expression -> term .)
    COMA            reduce using rule 46 (additive_expression -> term .)
    MULTI           shift and go to state 77
    DIVI            shift and go to state 76

    mulop                          shift and go to state 78

state 55

    (17) compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .

    DLLAVE          reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    PUNTOC          reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    ILLAVE          reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    IF              reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    WHILE           reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    RETURN          reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    ID              reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    IPAREN          reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    NUM             reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    ELSE            reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    INT             reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    VOID            reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)
    $end            reduce using rule 17 (compound_stmt -> ILLAVE local_declarations statement_list DLLAVE .)


state 56

    (25) statement -> iteration_stmt .

    ELSE            reduce using rule 25 (statement -> iteration_stmt .)
    DLLAVE          reduce using rule 25 (statement -> iteration_stmt .)
    PUNTOC          reduce using rule 25 (statement -> iteration_stmt .)
    ILLAVE          reduce using rule 25 (statement -> iteration_stmt .)
    IF              reduce using rule 25 (statement -> iteration_stmt .)
    WHILE           reduce using rule 25 (statement -> iteration_stmt .)
    RETURN          reduce using rule 25 (statement -> iteration_stmt .)
    ID              reduce using rule 25 (statement -> iteration_stmt .)
    IPAREN          reduce using rule 25 (statement -> iteration_stmt .)
    NUM             reduce using rule 25 (statement -> iteration_stmt .)


state 57

    (27) expression_stmt -> expression . PUNTOC

    PUNTOC          shift and go to state 79


state 58

    (31) return_stmt -> RETURN PUNTOC .

    DLLAVE          reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    PUNTOC          reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    ILLAVE          reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    IF              reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    WHILE           reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    RETURN          reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    ID              reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    IPAREN          reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    NUM             reduce using rule 31 (return_stmt -> RETURN PUNTOC .)
    ELSE            reduce using rule 31 (return_stmt -> RETURN PUNTOC .)


state 59

    (32) return_stmt -> RETURN expression . PUNTOC

    PUNTOC          shift and go to state 80


state 60

    (30) iteration_stmt -> WHILE IPAREN . expression DPAREN statement
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 81
    additive_expression            shift and go to state 41

state 61

    (45) additive_expression -> additive_expression addop . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (57) call -> . ID IPAREN args DPAREN

    IPAREN          shift and go to state 43
    NUM             shift and go to state 44
    ID              shift and go to state 52

    term                           shift and go to state 82
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 83

state 62

    (44) relop -> DIST .

    IPAREN          reduce using rule 44 (relop -> DIST .)
    NUM             reduce using rule 44 (relop -> DIST .)
    ID              reduce using rule 44 (relop -> DIST .)


state 63

    (37) simple_expression -> additive_expression relop . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (57) call -> . ID IPAREN args DPAREN

    IPAREN          shift and go to state 43
    NUM             shift and go to state 44
    ID              shift and go to state 52

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 83
    additive_expression            shift and go to state 84

state 64

    (42) relop -> MAYORI .

    IPAREN          reduce using rule 42 (relop -> MAYORI .)
    NUM             reduce using rule 42 (relop -> MAYORI .)
    ID              reduce using rule 42 (relop -> MAYORI .)


state 65

    (39) relop -> MENORI .

    IPAREN          reduce using rule 39 (relop -> MENORI .)
    NUM             reduce using rule 39 (relop -> MENORI .)
    ID              reduce using rule 39 (relop -> MENORI .)


state 66

    (43) relop -> IGUAL .

    IPAREN          reduce using rule 43 (relop -> IGUAL .)
    NUM             reduce using rule 43 (relop -> IGUAL .)
    ID              reduce using rule 43 (relop -> IGUAL .)


state 67

    (40) relop -> MENOR .

    IPAREN          reduce using rule 40 (relop -> MENOR .)
    NUM             reduce using rule 40 (relop -> MENOR .)
    ID              reduce using rule 40 (relop -> MENOR .)


state 68

    (47) addop -> SUMA .

    IPAREN          reduce using rule 47 (addop -> SUMA .)
    NUM             reduce using rule 47 (addop -> SUMA .)
    ID              reduce using rule 47 (addop -> SUMA .)


state 69

    (48) addop -> RESTA .

    IPAREN          reduce using rule 48 (addop -> RESTA .)
    NUM             reduce using rule 48 (addop -> RESTA .)
    ID              reduce using rule 48 (addop -> RESTA .)


state 70

    (41) relop -> MAYOR .

    IPAREN          reduce using rule 41 (relop -> MAYOR .)
    NUM             reduce using rule 41 (relop -> MAYOR .)
    ID              reduce using rule 41 (relop -> MAYOR .)


state 71

    (53) factor -> IPAREN expression . DPAREN

    DPAREN          shift and go to state 85


state 72

    (33) expression -> var ASIGN . expression
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 86
    additive_expression            shift and go to state 41

state 73

    (36) var -> ID ICORCH . expression DCORCH
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 87
    additive_expression            shift and go to state 41

state 74

    (57) call -> ID IPAREN . args DPAREN
    (58) args -> . arg_list
    (59) args -> . empty
    (60) arg_list -> . arg_list COMA expression
    (61) arg_list -> . expression
    (62) empty -> .
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    DPAREN          reduce using rule 62 (empty -> .)
    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    args                           shift and go to state 88
    call                           shift and go to state 42
    additive_expression            shift and go to state 41
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 89
    empty                          shift and go to state 90
    arg_list                       shift and go to state 91

state 75

    (29) selection_stmt -> IF IPAREN . expression DPAREN statement ELSE statement
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 92
    additive_expression            shift and go to state 41

state 76

    (52) mulop -> DIVI .

    IPAREN          reduce using rule 52 (mulop -> DIVI .)
    NUM             reduce using rule 52 (mulop -> DIVI .)
    ID              reduce using rule 52 (mulop -> DIVI .)


state 77

    (51) mulop -> MULTI .

    IPAREN          reduce using rule 51 (mulop -> MULTI .)
    NUM             reduce using rule 51 (mulop -> MULTI .)
    ID              reduce using rule 51 (mulop -> MULTI .)


state 78

    (49) term -> term mulop . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (57) call -> . ID IPAREN args DPAREN

    IPAREN          shift and go to state 43
    NUM             shift and go to state 44
    ID              shift and go to state 52

    call                           shift and go to state 42
    factor                         shift and go to state 93
    var                            shift and go to state 83

state 79

    (27) expression_stmt -> expression PUNTOC .

    DLLAVE          reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    PUNTOC          reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    ILLAVE          reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    IF              reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    WHILE           reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    RETURN          reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    ID              reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    IPAREN          reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    NUM             reduce using rule 27 (expression_stmt -> expression PUNTOC .)
    ELSE            reduce using rule 27 (expression_stmt -> expression PUNTOC .)


state 80

    (32) return_stmt -> RETURN expression PUNTOC .

    DLLAVE          reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    PUNTOC          reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    ILLAVE          reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    IF              reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    WHILE           reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    RETURN          reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    ID              reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    IPAREN          reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    NUM             reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)
    ELSE            reduce using rule 32 (return_stmt -> RETURN expression PUNTOC .)


state 81

    (30) iteration_stmt -> WHILE IPAREN expression . DPAREN statement

    DPAREN          shift and go to state 94


state 82

    (45) additive_expression -> additive_expression addop term .
    (49) term -> term . mulop factor
    (51) mulop -> . MULTI
    (52) mulop -> . DIVI

    MENORI          reduce using rule 45 (additive_expression -> additive_expression addop term .)
    MENOR           reduce using rule 45 (additive_expression -> additive_expression addop term .)
    MAYOR           reduce using rule 45 (additive_expression -> additive_expression addop term .)
    MAYORI          reduce using rule 45 (additive_expression -> additive_expression addop term .)
    IGUAL           reduce using rule 45 (additive_expression -> additive_expression addop term .)
    DIST            reduce using rule 45 (additive_expression -> additive_expression addop term .)
    SUMA            reduce using rule 45 (additive_expression -> additive_expression addop term .)
    RESTA           reduce using rule 45 (additive_expression -> additive_expression addop term .)
    DPAREN          reduce using rule 45 (additive_expression -> additive_expression addop term .)
    PUNTOC          reduce using rule 45 (additive_expression -> additive_expression addop term .)
    DCORCH          reduce using rule 45 (additive_expression -> additive_expression addop term .)
    COMA            reduce using rule 45 (additive_expression -> additive_expression addop term .)
    MULTI           shift and go to state 77
    DIVI            shift and go to state 76

    mulop                          shift and go to state 78

state 83

    (54) factor -> var .

    MULTI           reduce using rule 54 (factor -> var .)
    DIVI            reduce using rule 54 (factor -> var .)
    SUMA            reduce using rule 54 (factor -> var .)
    RESTA           reduce using rule 54 (factor -> var .)
    PUNTOC          reduce using rule 54 (factor -> var .)
    DPAREN          reduce using rule 54 (factor -> var .)
    DCORCH          reduce using rule 54 (factor -> var .)
    COMA            reduce using rule 54 (factor -> var .)
    MENORI          reduce using rule 54 (factor -> var .)
    MENOR           reduce using rule 54 (factor -> var .)
    MAYOR           reduce using rule 54 (factor -> var .)
    MAYORI          reduce using rule 54 (factor -> var .)
    IGUAL           reduce using rule 54 (factor -> var .)
    DIST            reduce using rule 54 (factor -> var .)


state 84

    (37) simple_expression -> additive_expression relop additive_expression .
    (45) additive_expression -> additive_expression . addop term
    (47) addop -> . SUMA
    (48) addop -> . RESTA

    PUNTOC          reduce using rule 37 (simple_expression -> additive_expression relop additive_expression .)
    DCORCH          reduce using rule 37 (simple_expression -> additive_expression relop additive_expression .)
    DPAREN          reduce using rule 37 (simple_expression -> additive_expression relop additive_expression .)
    COMA            reduce using rule 37 (simple_expression -> additive_expression relop additive_expression .)
    SUMA            shift and go to state 68
    RESTA           shift and go to state 69

    addop                          shift and go to state 61

state 85

    (53) factor -> IPAREN expression DPAREN .

    MULTI           reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    DIVI            reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    MENORI          reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    MENOR           reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    MAYOR           reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    MAYORI          reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    IGUAL           reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    DIST            reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    SUMA            reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    RESTA           reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    COMA            reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    DPAREN          reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    PUNTOC          reduce using rule 53 (factor -> IPAREN expression DPAREN .)
    DCORCH          reduce using rule 53 (factor -> IPAREN expression DPAREN .)


state 86

    (33) expression -> var ASIGN expression .

    DPAREN          reduce using rule 33 (expression -> var ASIGN expression .)
    PUNTOC          reduce using rule 33 (expression -> var ASIGN expression .)
    DCORCH          reduce using rule 33 (expression -> var ASIGN expression .)
    COMA            reduce using rule 33 (expression -> var ASIGN expression .)


state 87

    (36) var -> ID ICORCH expression . DCORCH

    DCORCH          shift and go to state 95


state 88

    (57) call -> ID IPAREN args . DPAREN

    DPAREN          shift and go to state 96


state 89

    (61) arg_list -> expression .

    COMA            reduce using rule 61 (arg_list -> expression .)
    DPAREN          reduce using rule 61 (arg_list -> expression .)


state 90

    (59) args -> empty .

    DPAREN          reduce using rule 59 (args -> empty .)


state 91

    (58) args -> arg_list .
    (60) arg_list -> arg_list . COMA expression

    DPAREN          reduce using rule 58 (args -> arg_list .)
    COMA            shift and go to state 97


state 92

    (29) selection_stmt -> IF IPAREN expression . DPAREN statement ELSE statement

    DPAREN          shift and go to state 98


state 93

    (49) term -> term mulop factor .

    MULTI           reduce using rule 49 (term -> term mulop factor .)
    DIVI            reduce using rule 49 (term -> term mulop factor .)
    MENORI          reduce using rule 49 (term -> term mulop factor .)
    MENOR           reduce using rule 49 (term -> term mulop factor .)
    MAYOR           reduce using rule 49 (term -> term mulop factor .)
    MAYORI          reduce using rule 49 (term -> term mulop factor .)
    IGUAL           reduce using rule 49 (term -> term mulop factor .)
    DIST            reduce using rule 49 (term -> term mulop factor .)
    SUMA            reduce using rule 49 (term -> term mulop factor .)
    RESTA           reduce using rule 49 (term -> term mulop factor .)
    DPAREN          reduce using rule 49 (term -> term mulop factor .)
    PUNTOC          reduce using rule 49 (term -> term mulop factor .)
    DCORCH          reduce using rule 49 (term -> term mulop factor .)
    COMA            reduce using rule 49 (term -> term mulop factor .)


state 94

    (30) iteration_stmt -> WHILE IPAREN expression DPAREN . statement
    (22) statement -> . expression_stmt
    (23) statement -> . compound_stmt
    (24) statement -> . selection_stmt
    (25) statement -> . iteration_stmt
    (26) statement -> . return_stmt
    (27) expression_stmt -> . expression PUNTOC
    (28) expression_stmt -> . PUNTOC
    (17) compound_stmt -> . ILLAVE local_declarations statement_list DLLAVE
    (29) selection_stmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (30) iteration_stmt -> . WHILE IPAREN expression DPAREN statement
    (31) return_stmt -> . RETURN PUNTOC
    (32) return_stmt -> . RETURN expression PUNTOC
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    PUNTOC          shift and go to state 50
    ILLAVE          shift and go to state 27
    IF              shift and go to state 53
    WHILE           shift and go to state 38
    RETURN          shift and go to state 37
    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    return_stmt                    shift and go to state 39
    call                           shift and go to state 42
    factor                         shift and go to state 47
    term                           shift and go to state 54
    var                            shift and go to state 48
    expression_stmt                shift and go to state 45
    statement                      shift and go to state 99
    selection_stmt                 shift and go to state 49
    iteration_stmt                 shift and go to state 56
    simple_expression              shift and go to state 40
    expression                     shift and go to state 57
    compound_stmt                  shift and go to state 51
    additive_expression            shift and go to state 41

state 95

    (36) var -> ID ICORCH expression DCORCH .

    ASIGN           reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    MULTI           reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    DIVI            reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    MENORI          reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    MENOR           reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    MAYOR           reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    MAYORI          reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    IGUAL           reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    DIST            reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    SUMA            reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    RESTA           reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    PUNTOC          reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    DPAREN          reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    DCORCH          reduce using rule 36 (var -> ID ICORCH expression DCORCH .)
    COMA            reduce using rule 36 (var -> ID ICORCH expression DCORCH .)


state 96

    (57) call -> ID IPAREN args DPAREN .

    MULTI           reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    DIVI            reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    MENORI          reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    MENOR           reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    MAYOR           reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    MAYORI          reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    IGUAL           reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    DIST            reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    SUMA            reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    RESTA           reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    PUNTOC          reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    DPAREN          reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    DCORCH          reduce using rule 57 (call -> ID IPAREN args DPAREN .)
    COMA            reduce using rule 57 (call -> ID IPAREN args DPAREN .)


state 97

    (60) arg_list -> arg_list COMA . expression
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    term                           shift and go to state 54
    call                           shift and go to state 42
    factor                         shift and go to state 47
    var                            shift and go to state 48
    simple_expression              shift and go to state 40
    expression                     shift and go to state 100
    additive_expression            shift and go to state 41

state 98

    (29) selection_stmt -> IF IPAREN expression DPAREN . statement ELSE statement
    (22) statement -> . expression_stmt
    (23) statement -> . compound_stmt
    (24) statement -> . selection_stmt
    (25) statement -> . iteration_stmt
    (26) statement -> . return_stmt
    (27) expression_stmt -> . expression PUNTOC
    (28) expression_stmt -> . PUNTOC
    (17) compound_stmt -> . ILLAVE local_declarations statement_list DLLAVE
    (29) selection_stmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (30) iteration_stmt -> . WHILE IPAREN expression DPAREN statement
    (31) return_stmt -> . RETURN PUNTOC
    (32) return_stmt -> . RETURN expression PUNTOC
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    PUNTOC          shift and go to state 50
    ILLAVE          shift and go to state 27
    IF              shift and go to state 53
    WHILE           shift and go to state 38
    RETURN          shift and go to state 37
    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    return_stmt                    shift and go to state 39
    call                           shift and go to state 42
    factor                         shift and go to state 47
    term                           shift and go to state 54
    var                            shift and go to state 48
    expression_stmt                shift and go to state 45
    statement                      shift and go to state 101
    selection_stmt                 shift and go to state 49
    iteration_stmt                 shift and go to state 56
    simple_expression              shift and go to state 40
    expression                     shift and go to state 57
    compound_stmt                  shift and go to state 51
    additive_expression            shift and go to state 41

state 99

    (30) iteration_stmt -> WHILE IPAREN expression DPAREN statement .

    DLLAVE          reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    PUNTOC          reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    ILLAVE          reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    IF              reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    WHILE           reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    RETURN          reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    ID              reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    IPAREN          reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    NUM             reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)
    ELSE            reduce using rule 30 (iteration_stmt -> WHILE IPAREN expression DPAREN statement .)


state 100

    (60) arg_list -> arg_list COMA expression .

    COMA            reduce using rule 60 (arg_list -> arg_list COMA expression .)
    DPAREN          reduce using rule 60 (arg_list -> arg_list COMA expression .)


state 101

    (29) selection_stmt -> IF IPAREN expression DPAREN statement . ELSE statement

    ELSE            shift and go to state 102


state 102

    (29) selection_stmt -> IF IPAREN expression DPAREN statement ELSE . statement
    (22) statement -> . expression_stmt
    (23) statement -> . compound_stmt
    (24) statement -> . selection_stmt
    (25) statement -> . iteration_stmt
    (26) statement -> . return_stmt
    (27) expression_stmt -> . expression PUNTOC
    (28) expression_stmt -> . PUNTOC
    (17) compound_stmt -> . ILLAVE local_declarations statement_list DLLAVE
    (29) selection_stmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (30) iteration_stmt -> . WHILE IPAREN expression DPAREN statement
    (31) return_stmt -> . RETURN PUNTOC
    (32) return_stmt -> . RETURN expression PUNTOC
    (33) expression -> . var ASIGN expression
    (34) expression -> . simple_expression
    (35) var -> . ID
    (36) var -> . ID ICORCH expression DCORCH
    (37) simple_expression -> . additive_expression relop additive_expression
    (38) simple_expression -> . additive_expression
    (45) additive_expression -> . additive_expression addop term
    (46) additive_expression -> . term
    (49) term -> . term mulop factor
    (50) term -> . factor
    (53) factor -> . IPAREN expression DPAREN
    (54) factor -> . var
    (55) factor -> . call
    (56) factor -> . NUM
    (57) call -> . ID IPAREN args DPAREN

    PUNTOC          shift and go to state 50
    ILLAVE          shift and go to state 27
    IF              shift and go to state 53
    WHILE           shift and go to state 38
    RETURN          shift and go to state 37
    ID              shift and go to state 52
    IPAREN          shift and go to state 43
    NUM             shift and go to state 44

    return_stmt                    shift and go to state 39
    call                           shift and go to state 42
    factor                         shift and go to state 47
    term                           shift and go to state 54
    var                            shift and go to state 48
    expression_stmt                shift and go to state 45
    statement                      shift and go to state 103
    selection_stmt                 shift and go to state 49
    iteration_stmt                 shift and go to state 56
    simple_expression              shift and go to state 40
    expression                     shift and go to state 57
    compound_stmt                  shift and go to state 51
    additive_expression            shift and go to state 41

state 103

    (29) selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .

    DLLAVE          reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    PUNTOC          reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    ILLAVE          reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    IF              reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    WHILE           reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    RETURN          reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    ID              reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    IPAREN          reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    NUM             reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    ELSE            reduce using rule 29 (selection_stmt -> IF IPAREN expression DPAREN statement ELSE statement .)

