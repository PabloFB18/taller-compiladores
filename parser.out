Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    RESERVED

Grammar

Rule 0     S' -> program
Rule 1     program -> declarationList
Rule 2     declarationList -> declarationList declaration
Rule 3     declarationList -> declaration
Rule 4     declaration -> varDeclaration
Rule 5     declaration -> funDeclaration
Rule 6     varDeclaration -> typeSpecifier ID PUNTOC
Rule 7     varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC
Rule 8     typeSpecifier -> INT
Rule 9     typeSpecifier -> VOID
Rule 10    funDeclaration -> typeSpecifier ID IPAREN params DPAREN compoundStmt
Rule 11    params -> paramList
Rule 12    params -> VOID
Rule 13    paramList -> paramList COMA param
Rule 14    paramList -> param
Rule 15    param -> typeSpecifier ID
Rule 16    param -> typeSpecifier ID ICORCH DCORCH
Rule 17    compoundStmt -> ILLAVE localDeclarations statementList DLLAVE
Rule 18    localDeclarations -> localDeclarations varDeclaration
Rule 19    localDeclarations -> empty
Rule 20    statementList -> statementList statement
Rule 21    statementList -> empty
Rule 22    statement -> expressionStmt
Rule 23    statement -> compoundStmt
Rule 24    statement -> selectionStmt
Rule 25    statement -> iterationStmt
Rule 26    statement -> returnStmt
Rule 27    expressionStmt -> statementList statement PUNTOC
Rule 28    expressionStmt -> PUNTOC
Rule 29    selectionStmt -> IF IPAREN expression DPAREN statement
Rule 30    selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement
Rule 31    iterationStmt -> WHILE IPAREN expression DPAREN statement
Rule 32    returnStmt -> RETURN PUNTOC
Rule 33    returnStmt -> RETURN expression PUNTOC
Rule 34    expression -> var ASIGN expression
Rule 35    expression -> simpleExpression
Rule 36    var -> ID
Rule 37    var -> ID ICORCH expression DCORCH
Rule 38    simpleExpression -> additiveExpression relop additiveExpression
Rule 39    simpleExpression -> additiveExpression
Rule 40    relop -> MENORI
Rule 41    relop -> MENOR
Rule 42    relop -> MAYOR
Rule 43    relop -> MAYORI
Rule 44    relop -> IGUAL
Rule 45    relop -> DIST
Rule 46    additiveExpression -> additiveExpression addop term
Rule 47    additiveExpression -> term
Rule 48    addop -> SUMA
Rule 49    addop -> RESTA
Rule 50    term -> term mulop factor
Rule 51    term -> factor
Rule 52    mulop -> MULTI
Rule 53    mulop -> DIVI
Rule 54    factor -> IPAREN expression DPAREN
Rule 55    factor -> var
Rule 56    factor -> call
Rule 57    factor -> NUM
Rule 58    call -> ID IPAREN args DPAREN
Rule 59    args -> argList
Rule 60    args -> empty
Rule 61    argList -> argList COMA expression
Rule 62    argList -> expression
Rule 63    empty -> <empty>

Terminals, with rules where they appear

ASIGN                : 34
COMA                 : 13 61
DCORCH               : 7 16 37
DIST                 : 45
DIVI                 : 53
DLLAVE               : 17
DPAREN               : 10 29 30 31 54 58
ELSE                 : 30
ICORCH               : 7 16 37
ID                   : 6 7 10 15 16 36 37 58
IF                   : 29 30
IGUAL                : 44
ILLAVE               : 17
INT                  : 8
IPAREN               : 10 29 30 31 54 58
MAYOR                : 42
MAYORI               : 43
MENOR                : 41
MENORI               : 40
MULTI                : 52
NUM                  : 7 57
PUNTOC               : 6 7 27 28 32 33
RESERVED             : 
RESTA                : 49
RETURN               : 32 33
SUMA                 : 48
VOID                 : 9 12
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

additiveExpression   : 38 38 39 46
addop                : 46
argList              : 59 61
args                 : 58
call                 : 56
compoundStmt         : 10 23
declaration          : 2 3
declarationList      : 1 2
empty                : 19 21 60
expression           : 29 30 31 33 34 37 54 61 62
expressionStmt       : 22
factor               : 50 51
funDeclaration       : 5
iterationStmt        : 25
localDeclarations    : 17 18
mulop                : 50
param                : 13 14
paramList            : 11 13
params               : 10
program              : 0
relop                : 38
returnStmt           : 26
selectionStmt        : 24
simpleExpression     : 35
statement            : 20 27 29 30 30 31
statementList        : 17 20 27
term                 : 46 47 50
typeSpecifier        : 6 7 10 15 16
var                  : 34 55
varDeclaration       : 4 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declarationList
    (2) declarationList -> . declarationList declaration
    (3) declarationList -> . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . funDeclaration
    (6) varDeclaration -> . typeSpecifier ID PUNTOC
    (7) varDeclaration -> . typeSpecifier ID ICORCH NUM DCORCH PUNTOC
    (10) funDeclaration -> . typeSpecifier ID IPAREN params DPAREN compoundStmt
    (8) typeSpecifier -> . INT
    (9) typeSpecifier -> . VOID

    INT             shift and go to state 2
    VOID            shift and go to state 4

    varDeclaration                 shift and go to state 1
    declarationList                shift and go to state 3
    program                        shift and go to state 5
    declaration                    shift and go to state 6
    funDeclaration                 shift and go to state 7
    typeSpecifier                  shift and go to state 8

state 1

    (4) declaration -> varDeclaration .

    INT             reduce using rule 4 (declaration -> varDeclaration .)
    VOID            reduce using rule 4 (declaration -> varDeclaration .)
    $end            reduce using rule 4 (declaration -> varDeclaration .)


state 2

    (8) typeSpecifier -> INT .

    ID              reduce using rule 8 (typeSpecifier -> INT .)


state 3

    (1) program -> declarationList .
    (2) declarationList -> declarationList . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . funDeclaration
    (6) varDeclaration -> . typeSpecifier ID PUNTOC
    (7) varDeclaration -> . typeSpecifier ID ICORCH NUM DCORCH PUNTOC
    (10) funDeclaration -> . typeSpecifier ID IPAREN params DPAREN compoundStmt
    (8) typeSpecifier -> . INT
    (9) typeSpecifier -> . VOID

    $end            reduce using rule 1 (program -> declarationList .)
    INT             shift and go to state 2
    VOID            shift and go to state 4

    varDeclaration                 shift and go to state 1
    funDeclaration                 shift and go to state 7
    declaration                    shift and go to state 9
    typeSpecifier                  shift and go to state 8

state 4

    (9) typeSpecifier -> VOID .

    ID              reduce using rule 9 (typeSpecifier -> VOID .)


state 5

    (0) S' -> program .



state 6

    (3) declarationList -> declaration .

    INT             reduce using rule 3 (declarationList -> declaration .)
    VOID            reduce using rule 3 (declarationList -> declaration .)
    $end            reduce using rule 3 (declarationList -> declaration .)


state 7

    (5) declaration -> funDeclaration .

    INT             reduce using rule 5 (declaration -> funDeclaration .)
    VOID            reduce using rule 5 (declaration -> funDeclaration .)
    $end            reduce using rule 5 (declaration -> funDeclaration .)


state 8

    (6) varDeclaration -> typeSpecifier . ID PUNTOC
    (7) varDeclaration -> typeSpecifier . ID ICORCH NUM DCORCH PUNTOC
    (10) funDeclaration -> typeSpecifier . ID IPAREN params DPAREN compoundStmt

    ID              shift and go to state 10


state 9

    (2) declarationList -> declarationList declaration .

    INT             reduce using rule 2 (declarationList -> declarationList declaration .)
    VOID            reduce using rule 2 (declarationList -> declarationList declaration .)
    $end            reduce using rule 2 (declarationList -> declarationList declaration .)


state 10

    (6) varDeclaration -> typeSpecifier ID . PUNTOC
    (7) varDeclaration -> typeSpecifier ID . ICORCH NUM DCORCH PUNTOC
    (10) funDeclaration -> typeSpecifier ID . IPAREN params DPAREN compoundStmt

    PUNTOC          shift and go to state 13
    ICORCH          shift and go to state 11
    IPAREN          shift and go to state 12


state 11

    (7) varDeclaration -> typeSpecifier ID ICORCH . NUM DCORCH PUNTOC

    NUM             shift and go to state 14


state 12

    (10) funDeclaration -> typeSpecifier ID IPAREN . params DPAREN compoundStmt
    (11) params -> . paramList
    (12) params -> . VOID
    (13) paramList -> . paramList COMA param
    (14) paramList -> . param
    (15) param -> . typeSpecifier ID
    (16) param -> . typeSpecifier ID ICORCH DCORCH
    (8) typeSpecifier -> . INT
    (9) typeSpecifier -> . VOID

    VOID            shift and go to state 15
    INT             shift and go to state 2

    param                          shift and go to state 18
    params                         shift and go to state 17
    typeSpecifier                  shift and go to state 16
    paramList                      shift and go to state 19

state 13

    (6) varDeclaration -> typeSpecifier ID PUNTOC .

    INT             reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    VOID            reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    $end            reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    DLLAVE          reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    PUNTOC          reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    ILLAVE          reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    IF              reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    WHILE           reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)
    RETURN          reduce using rule 6 (varDeclaration -> typeSpecifier ID PUNTOC .)


state 14

    (7) varDeclaration -> typeSpecifier ID ICORCH NUM . DCORCH PUNTOC

    DCORCH          shift and go to state 20


state 15

    (12) params -> VOID .
    (9) typeSpecifier -> VOID .

    DPAREN          reduce using rule 12 (params -> VOID .)
    ID              reduce using rule 9 (typeSpecifier -> VOID .)


state 16

    (15) param -> typeSpecifier . ID
    (16) param -> typeSpecifier . ID ICORCH DCORCH

    ID              shift and go to state 21


state 17

    (10) funDeclaration -> typeSpecifier ID IPAREN params . DPAREN compoundStmt

    DPAREN          shift and go to state 22


state 18

    (14) paramList -> param .

    COMA            reduce using rule 14 (paramList -> param .)
    DPAREN          reduce using rule 14 (paramList -> param .)


state 19

    (11) params -> paramList .
    (13) paramList -> paramList . COMA param

    DPAREN          reduce using rule 11 (params -> paramList .)
    COMA            shift and go to state 23


state 20

    (7) varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH . PUNTOC

    PUNTOC          shift and go to state 24


state 21

    (15) param -> typeSpecifier ID .
    (16) param -> typeSpecifier ID . ICORCH DCORCH

    COMA            reduce using rule 15 (param -> typeSpecifier ID .)
    DPAREN          reduce using rule 15 (param -> typeSpecifier ID .)
    ICORCH          shift and go to state 25


state 22

    (10) funDeclaration -> typeSpecifier ID IPAREN params DPAREN . compoundStmt
    (17) compoundStmt -> . ILLAVE localDeclarations statementList DLLAVE

    ILLAVE          shift and go to state 26

    compoundStmt                   shift and go to state 27

state 23

    (13) paramList -> paramList COMA . param
    (15) param -> . typeSpecifier ID
    (16) param -> . typeSpecifier ID ICORCH DCORCH
    (8) typeSpecifier -> . INT
    (9) typeSpecifier -> . VOID

    INT             shift and go to state 2
    VOID            shift and go to state 4

    param                          shift and go to state 28
    typeSpecifier                  shift and go to state 16

state 24

    (7) varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .

    INT             reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    VOID            reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    $end            reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    DLLAVE          reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    PUNTOC          reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    ILLAVE          reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    IF              reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    WHILE           reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)
    RETURN          reduce using rule 7 (varDeclaration -> typeSpecifier ID ICORCH NUM DCORCH PUNTOC .)


state 25

    (16) param -> typeSpecifier ID ICORCH . DCORCH

    DCORCH          shift and go to state 29


state 26

    (17) compoundStmt -> ILLAVE . localDeclarations statementList DLLAVE
    (18) localDeclarations -> . localDeclarations varDeclaration
    (19) localDeclarations -> . empty
    (63) empty -> .

    INT             reduce using rule 63 (empty -> .)
    VOID            reduce using rule 63 (empty -> .)
    DLLAVE          reduce using rule 63 (empty -> .)
    PUNTOC          reduce using rule 63 (empty -> .)
    ILLAVE          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 30
    localDeclarations              shift and go to state 31

state 27

    (10) funDeclaration -> typeSpecifier ID IPAREN params DPAREN compoundStmt .

    INT             reduce using rule 10 (funDeclaration -> typeSpecifier ID IPAREN params DPAREN compoundStmt .)
    VOID            reduce using rule 10 (funDeclaration -> typeSpecifier ID IPAREN params DPAREN compoundStmt .)
    $end            reduce using rule 10 (funDeclaration -> typeSpecifier ID IPAREN params DPAREN compoundStmt .)


state 28

    (13) paramList -> paramList COMA param .

    COMA            reduce using rule 13 (paramList -> paramList COMA param .)
    DPAREN          reduce using rule 13 (paramList -> paramList COMA param .)


state 29

    (16) param -> typeSpecifier ID ICORCH DCORCH .

    COMA            reduce using rule 16 (param -> typeSpecifier ID ICORCH DCORCH .)
    DPAREN          reduce using rule 16 (param -> typeSpecifier ID ICORCH DCORCH .)


state 30

    (19) localDeclarations -> empty .

    INT             reduce using rule 19 (localDeclarations -> empty .)
    VOID            reduce using rule 19 (localDeclarations -> empty .)
    DLLAVE          reduce using rule 19 (localDeclarations -> empty .)
    PUNTOC          reduce using rule 19 (localDeclarations -> empty .)
    ILLAVE          reduce using rule 19 (localDeclarations -> empty .)
    IF              reduce using rule 19 (localDeclarations -> empty .)
    WHILE           reduce using rule 19 (localDeclarations -> empty .)
    RETURN          reduce using rule 19 (localDeclarations -> empty .)


state 31

    (17) compoundStmt -> ILLAVE localDeclarations . statementList DLLAVE
    (18) localDeclarations -> localDeclarations . varDeclaration
    (20) statementList -> . statementList statement
    (21) statementList -> . empty
    (6) varDeclaration -> . typeSpecifier ID PUNTOC
    (7) varDeclaration -> . typeSpecifier ID ICORCH NUM DCORCH PUNTOC
    (63) empty -> .
    (8) typeSpecifier -> . INT
    (9) typeSpecifier -> . VOID

    DLLAVE          reduce using rule 63 (empty -> .)
    PUNTOC          reduce using rule 63 (empty -> .)
    ILLAVE          reduce using rule 63 (empty -> .)
    IF              reduce using rule 63 (empty -> .)
    WHILE           reduce using rule 63 (empty -> .)
    RETURN          reduce using rule 63 (empty -> .)
    INT             shift and go to state 2
    VOID            shift and go to state 4

    varDeclaration                 shift and go to state 32
    statementList                  shift and go to state 33
    typeSpecifier                  shift and go to state 34
    empty                          shift and go to state 35

state 32

    (18) localDeclarations -> localDeclarations varDeclaration .

    INT             reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)
    VOID            reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)
    DLLAVE          reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)
    PUNTOC          reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)
    ILLAVE          reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)
    IF              reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)
    WHILE           reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)
    RETURN          reduce using rule 18 (localDeclarations -> localDeclarations varDeclaration .)


state 33

    (17) compoundStmt -> ILLAVE localDeclarations statementList . DLLAVE
    (20) statementList -> statementList . statement
    (22) statement -> . expressionStmt
    (23) statement -> . compoundStmt
    (24) statement -> . selectionStmt
    (25) statement -> . iterationStmt
    (26) statement -> . returnStmt
    (27) expressionStmt -> . statementList statement PUNTOC
    (28) expressionStmt -> . PUNTOC
    (17) compoundStmt -> . ILLAVE localDeclarations statementList DLLAVE
    (29) selectionStmt -> . IF IPAREN expression DPAREN statement
    (30) selectionStmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (31) iterationStmt -> . WHILE IPAREN expression DPAREN statement
    (32) returnStmt -> . RETURN PUNTOC
    (33) returnStmt -> . RETURN expression PUNTOC
    (20) statementList -> . statementList statement
    (21) statementList -> . empty
    (63) empty -> .

  ! shift/reduce conflict for PUNTOC resolved as shift
  ! shift/reduce conflict for ILLAVE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    DLLAVE          shift and go to state 38
    PUNTOC          shift and go to state 45
    ILLAVE          shift and go to state 26
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    RETURN          shift and go to state 36

  ! PUNTOC          [ reduce using rule 63 (empty -> .) ]
  ! ILLAVE          [ reduce using rule 63 (empty -> .) ]
  ! IF              [ reduce using rule 63 (empty -> .) ]
  ! WHILE           [ reduce using rule 63 (empty -> .) ]
  ! RETURN          [ reduce using rule 63 (empty -> .) ]

    selectionStmt                  shift and go to state 37
    statementList                  shift and go to state 41
    expressionStmt                 shift and go to state 42
    empty                          shift and go to state 35
    statement                      shift and go to state 43
    returnStmt                     shift and go to state 44
    compoundStmt                   shift and go to state 46
    iterationStmt                  shift and go to state 47

state 34

    (6) varDeclaration -> typeSpecifier . ID PUNTOC
    (7) varDeclaration -> typeSpecifier . ID ICORCH NUM DCORCH PUNTOC

    ID              shift and go to state 48


state 35

    (21) statementList -> empty .

    PUNTOC          reduce using rule 21 (statementList -> empty .)
    ILLAVE          reduce using rule 21 (statementList -> empty .)
    IF              reduce using rule 21 (statementList -> empty .)
    WHILE           reduce using rule 21 (statementList -> empty .)
    RETURN          reduce using rule 21 (statementList -> empty .)
    DLLAVE          reduce using rule 21 (statementList -> empty .)


state 36

    (32) returnStmt -> RETURN . PUNTOC
    (33) returnStmt -> RETURN . expression PUNTOC
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    PUNTOC          shift and go to state 57
    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    expression                     shift and go to state 58

state 37

    (24) statement -> selectionStmt .

    PUNTOC          reduce using rule 24 (statement -> selectionStmt .)
    ILLAVE          reduce using rule 24 (statement -> selectionStmt .)
    IF              reduce using rule 24 (statement -> selectionStmt .)
    WHILE           reduce using rule 24 (statement -> selectionStmt .)
    RETURN          reduce using rule 24 (statement -> selectionStmt .)
    ELSE            reduce using rule 24 (statement -> selectionStmt .)
    DLLAVE          reduce using rule 24 (statement -> selectionStmt .)


state 38

    (17) compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .

    INT             reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    VOID            reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    $end            reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    PUNTOC          reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    ILLAVE          reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    IF              reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    WHILE           reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    RETURN          reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    ELSE            reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)
    DLLAVE          reduce using rule 17 (compoundStmt -> ILLAVE localDeclarations statementList DLLAVE .)


state 39

    (29) selectionStmt -> IF . IPAREN expression DPAREN statement
    (30) selectionStmt -> IF . IPAREN expression DPAREN statement ELSE statement

    IPAREN          shift and go to state 60


state 40

    (31) iterationStmt -> WHILE . IPAREN expression DPAREN statement

    IPAREN          shift and go to state 61


state 41

    (27) expressionStmt -> statementList . statement PUNTOC
    (20) statementList -> statementList . statement
    (22) statement -> . expressionStmt
    (23) statement -> . compoundStmt
    (24) statement -> . selectionStmt
    (25) statement -> . iterationStmt
    (26) statement -> . returnStmt
    (27) expressionStmt -> . statementList statement PUNTOC
    (28) expressionStmt -> . PUNTOC
    (17) compoundStmt -> . ILLAVE localDeclarations statementList DLLAVE
    (29) selectionStmt -> . IF IPAREN expression DPAREN statement
    (30) selectionStmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (31) iterationStmt -> . WHILE IPAREN expression DPAREN statement
    (32) returnStmt -> . RETURN PUNTOC
    (33) returnStmt -> . RETURN expression PUNTOC
    (20) statementList -> . statementList statement
    (21) statementList -> . empty
    (63) empty -> .

  ! shift/reduce conflict for PUNTOC resolved as shift
  ! shift/reduce conflict for ILLAVE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    PUNTOC          shift and go to state 45
    ILLAVE          shift and go to state 26
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    RETURN          shift and go to state 36

  ! PUNTOC          [ reduce using rule 63 (empty -> .) ]
  ! ILLAVE          [ reduce using rule 63 (empty -> .) ]
  ! IF              [ reduce using rule 63 (empty -> .) ]
  ! WHILE           [ reduce using rule 63 (empty -> .) ]
  ! RETURN          [ reduce using rule 63 (empty -> .) ]

    selectionStmt                  shift and go to state 37
    statementList                  shift and go to state 41
    expressionStmt                 shift and go to state 42
    empty                          shift and go to state 35
    statement                      shift and go to state 62
    returnStmt                     shift and go to state 44
    compoundStmt                   shift and go to state 46
    iterationStmt                  shift and go to state 47

state 42

    (22) statement -> expressionStmt .

    PUNTOC          reduce using rule 22 (statement -> expressionStmt .)
    ILLAVE          reduce using rule 22 (statement -> expressionStmt .)
    IF              reduce using rule 22 (statement -> expressionStmt .)
    WHILE           reduce using rule 22 (statement -> expressionStmt .)
    RETURN          reduce using rule 22 (statement -> expressionStmt .)
    ELSE            reduce using rule 22 (statement -> expressionStmt .)
    DLLAVE          reduce using rule 22 (statement -> expressionStmt .)


state 43

    (20) statementList -> statementList statement .

    DLLAVE          reduce using rule 20 (statementList -> statementList statement .)
    PUNTOC          reduce using rule 20 (statementList -> statementList statement .)
    ILLAVE          reduce using rule 20 (statementList -> statementList statement .)
    IF              reduce using rule 20 (statementList -> statementList statement .)
    WHILE           reduce using rule 20 (statementList -> statementList statement .)
    RETURN          reduce using rule 20 (statementList -> statementList statement .)


state 44

    (26) statement -> returnStmt .

    PUNTOC          reduce using rule 26 (statement -> returnStmt .)
    ILLAVE          reduce using rule 26 (statement -> returnStmt .)
    IF              reduce using rule 26 (statement -> returnStmt .)
    WHILE           reduce using rule 26 (statement -> returnStmt .)
    RETURN          reduce using rule 26 (statement -> returnStmt .)
    ELSE            reduce using rule 26 (statement -> returnStmt .)
    DLLAVE          reduce using rule 26 (statement -> returnStmt .)


state 45

    (28) expressionStmt -> PUNTOC .

    ELSE            reduce using rule 28 (expressionStmt -> PUNTOC .)
    DLLAVE          reduce using rule 28 (expressionStmt -> PUNTOC .)
    PUNTOC          reduce using rule 28 (expressionStmt -> PUNTOC .)
    ILLAVE          reduce using rule 28 (expressionStmt -> PUNTOC .)
    IF              reduce using rule 28 (expressionStmt -> PUNTOC .)
    WHILE           reduce using rule 28 (expressionStmt -> PUNTOC .)
    RETURN          reduce using rule 28 (expressionStmt -> PUNTOC .)


state 46

    (23) statement -> compoundStmt .

    PUNTOC          reduce using rule 23 (statement -> compoundStmt .)
    ILLAVE          reduce using rule 23 (statement -> compoundStmt .)
    IF              reduce using rule 23 (statement -> compoundStmt .)
    WHILE           reduce using rule 23 (statement -> compoundStmt .)
    RETURN          reduce using rule 23 (statement -> compoundStmt .)
    ELSE            reduce using rule 23 (statement -> compoundStmt .)
    DLLAVE          reduce using rule 23 (statement -> compoundStmt .)


state 47

    (25) statement -> iterationStmt .

    PUNTOC          reduce using rule 25 (statement -> iterationStmt .)
    ILLAVE          reduce using rule 25 (statement -> iterationStmt .)
    IF              reduce using rule 25 (statement -> iterationStmt .)
    WHILE           reduce using rule 25 (statement -> iterationStmt .)
    RETURN          reduce using rule 25 (statement -> iterationStmt .)
    ELSE            reduce using rule 25 (statement -> iterationStmt .)
    DLLAVE          reduce using rule 25 (statement -> iterationStmt .)


state 48

    (6) varDeclaration -> typeSpecifier ID . PUNTOC
    (7) varDeclaration -> typeSpecifier ID . ICORCH NUM DCORCH PUNTOC

    PUNTOC          shift and go to state 13
    ICORCH          shift and go to state 11


state 49

    (38) simpleExpression -> additiveExpression . relop additiveExpression
    (39) simpleExpression -> additiveExpression .
    (46) additiveExpression -> additiveExpression . addop term
    (40) relop -> . MENORI
    (41) relop -> . MENOR
    (42) relop -> . MAYOR
    (43) relop -> . MAYORI
    (44) relop -> . IGUAL
    (45) relop -> . DIST
    (48) addop -> . SUMA
    (49) addop -> . RESTA

    COMA            reduce using rule 39 (simpleExpression -> additiveExpression .)
    DPAREN          reduce using rule 39 (simpleExpression -> additiveExpression .)
    DCORCH          reduce using rule 39 (simpleExpression -> additiveExpression .)
    PUNTOC          reduce using rule 39 (simpleExpression -> additiveExpression .)
    MENORI          shift and go to state 67
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 71
    MAYORI          shift and go to state 66
    IGUAL           shift and go to state 68
    DIST            shift and go to state 64
    SUMA            shift and go to state 72
    RESTA           shift and go to state 70

    addop                          shift and go to state 63
    relop                          shift and go to state 65

state 50

    (47) additiveExpression -> term .
    (50) term -> term . mulop factor
    (52) mulop -> . MULTI
    (53) mulop -> . DIVI

    MENORI          reduce using rule 47 (additiveExpression -> term .)
    MENOR           reduce using rule 47 (additiveExpression -> term .)
    MAYOR           reduce using rule 47 (additiveExpression -> term .)
    MAYORI          reduce using rule 47 (additiveExpression -> term .)
    IGUAL           reduce using rule 47 (additiveExpression -> term .)
    DIST            reduce using rule 47 (additiveExpression -> term .)
    SUMA            reduce using rule 47 (additiveExpression -> term .)
    RESTA           reduce using rule 47 (additiveExpression -> term .)
    COMA            reduce using rule 47 (additiveExpression -> term .)
    DPAREN          reduce using rule 47 (additiveExpression -> term .)
    DCORCH          reduce using rule 47 (additiveExpression -> term .)
    PUNTOC          reduce using rule 47 (additiveExpression -> term .)
    MULTI           shift and go to state 74
    DIVI            shift and go to state 73

    mulop                          shift and go to state 75

state 51

    (54) factor -> IPAREN . expression DPAREN
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    expression                     shift and go to state 76

state 52

    (35) expression -> simpleExpression .

    DPAREN          reduce using rule 35 (expression -> simpleExpression .)
    DCORCH          reduce using rule 35 (expression -> simpleExpression .)
    PUNTOC          reduce using rule 35 (expression -> simpleExpression .)
    COMA            reduce using rule 35 (expression -> simpleExpression .)


state 53

    (56) factor -> call .

    MULTI           reduce using rule 56 (factor -> call .)
    DIVI            reduce using rule 56 (factor -> call .)
    MENORI          reduce using rule 56 (factor -> call .)
    MENOR           reduce using rule 56 (factor -> call .)
    MAYOR           reduce using rule 56 (factor -> call .)
    MAYORI          reduce using rule 56 (factor -> call .)
    IGUAL           reduce using rule 56 (factor -> call .)
    DIST            reduce using rule 56 (factor -> call .)
    SUMA            reduce using rule 56 (factor -> call .)
    RESTA           reduce using rule 56 (factor -> call .)
    PUNTOC          reduce using rule 56 (factor -> call .)
    DPAREN          reduce using rule 56 (factor -> call .)
    DCORCH          reduce using rule 56 (factor -> call .)
    COMA            reduce using rule 56 (factor -> call .)


state 54

    (51) term -> factor .

    MULTI           reduce using rule 51 (term -> factor .)
    DIVI            reduce using rule 51 (term -> factor .)
    MENORI          reduce using rule 51 (term -> factor .)
    MENOR           reduce using rule 51 (term -> factor .)
    MAYOR           reduce using rule 51 (term -> factor .)
    MAYORI          reduce using rule 51 (term -> factor .)
    IGUAL           reduce using rule 51 (term -> factor .)
    DIST            reduce using rule 51 (term -> factor .)
    SUMA            reduce using rule 51 (term -> factor .)
    RESTA           reduce using rule 51 (term -> factor .)
    PUNTOC          reduce using rule 51 (term -> factor .)
    DPAREN          reduce using rule 51 (term -> factor .)
    DCORCH          reduce using rule 51 (term -> factor .)
    COMA            reduce using rule 51 (term -> factor .)


state 55

    (34) expression -> var . ASIGN expression
    (55) factor -> var .

    ASIGN           shift and go to state 77
    MULTI           reduce using rule 55 (factor -> var .)
    DIVI            reduce using rule 55 (factor -> var .)
    MENORI          reduce using rule 55 (factor -> var .)
    MENOR           reduce using rule 55 (factor -> var .)
    MAYOR           reduce using rule 55 (factor -> var .)
    MAYORI          reduce using rule 55 (factor -> var .)
    IGUAL           reduce using rule 55 (factor -> var .)
    DIST            reduce using rule 55 (factor -> var .)
    SUMA            reduce using rule 55 (factor -> var .)
    RESTA           reduce using rule 55 (factor -> var .)
    PUNTOC          reduce using rule 55 (factor -> var .)
    DPAREN          reduce using rule 55 (factor -> var .)
    DCORCH          reduce using rule 55 (factor -> var .)
    COMA            reduce using rule 55 (factor -> var .)


state 56

    (57) factor -> NUM .

    MULTI           reduce using rule 57 (factor -> NUM .)
    DIVI            reduce using rule 57 (factor -> NUM .)
    MENORI          reduce using rule 57 (factor -> NUM .)
    MENOR           reduce using rule 57 (factor -> NUM .)
    MAYOR           reduce using rule 57 (factor -> NUM .)
    MAYORI          reduce using rule 57 (factor -> NUM .)
    IGUAL           reduce using rule 57 (factor -> NUM .)
    DIST            reduce using rule 57 (factor -> NUM .)
    SUMA            reduce using rule 57 (factor -> NUM .)
    RESTA           reduce using rule 57 (factor -> NUM .)
    PUNTOC          reduce using rule 57 (factor -> NUM .)
    DPAREN          reduce using rule 57 (factor -> NUM .)
    DCORCH          reduce using rule 57 (factor -> NUM .)
    COMA            reduce using rule 57 (factor -> NUM .)


state 57

    (32) returnStmt -> RETURN PUNTOC .

    ELSE            reduce using rule 32 (returnStmt -> RETURN PUNTOC .)
    DLLAVE          reduce using rule 32 (returnStmt -> RETURN PUNTOC .)
    PUNTOC          reduce using rule 32 (returnStmt -> RETURN PUNTOC .)
    ILLAVE          reduce using rule 32 (returnStmt -> RETURN PUNTOC .)
    IF              reduce using rule 32 (returnStmt -> RETURN PUNTOC .)
    WHILE           reduce using rule 32 (returnStmt -> RETURN PUNTOC .)
    RETURN          reduce using rule 32 (returnStmt -> RETURN PUNTOC .)


state 58

    (33) returnStmt -> RETURN expression . PUNTOC

    PUNTOC          shift and go to state 78


state 59

    (36) var -> ID .
    (37) var -> ID . ICORCH expression DCORCH
    (58) call -> ID . IPAREN args DPAREN

    MULTI           reduce using rule 36 (var -> ID .)
    DIVI            reduce using rule 36 (var -> ID .)
    MENORI          reduce using rule 36 (var -> ID .)
    MENOR           reduce using rule 36 (var -> ID .)
    MAYOR           reduce using rule 36 (var -> ID .)
    MAYORI          reduce using rule 36 (var -> ID .)
    IGUAL           reduce using rule 36 (var -> ID .)
    DIST            reduce using rule 36 (var -> ID .)
    SUMA            reduce using rule 36 (var -> ID .)
    RESTA           reduce using rule 36 (var -> ID .)
    PUNTOC          reduce using rule 36 (var -> ID .)
    DPAREN          reduce using rule 36 (var -> ID .)
    DCORCH          reduce using rule 36 (var -> ID .)
    COMA            reduce using rule 36 (var -> ID .)
    ASIGN           reduce using rule 36 (var -> ID .)
    ICORCH          shift and go to state 79
    IPAREN          shift and go to state 80


state 60

    (29) selectionStmt -> IF IPAREN . expression DPAREN statement
    (30) selectionStmt -> IF IPAREN . expression DPAREN statement ELSE statement
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    expression                     shift and go to state 81

state 61

    (31) iterationStmt -> WHILE IPAREN . expression DPAREN statement
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    expression                     shift and go to state 82

state 62

    (27) expressionStmt -> statementList statement . PUNTOC
    (20) statementList -> statementList statement .

  ! shift/reduce conflict for PUNTOC resolved as shift
    PUNTOC          shift and go to state 83
    ILLAVE          reduce using rule 20 (statementList -> statementList statement .)
    IF              reduce using rule 20 (statementList -> statementList statement .)
    WHILE           reduce using rule 20 (statementList -> statementList statement .)
    RETURN          reduce using rule 20 (statementList -> statementList statement .)

  ! PUNTOC          [ reduce using rule 20 (statementList -> statementList statement .) ]


state 63

    (46) additiveExpression -> additiveExpression addop . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (58) call -> . ID IPAREN args DPAREN

    IPAREN          shift and go to state 51
    NUM             shift and go to state 56
    ID              shift and go to state 59

    term                           shift and go to state 84
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 85

state 64

    (45) relop -> DIST .

    IPAREN          reduce using rule 45 (relop -> DIST .)
    NUM             reduce using rule 45 (relop -> DIST .)
    ID              reduce using rule 45 (relop -> DIST .)


state 65

    (38) simpleExpression -> additiveExpression relop . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (58) call -> . ID IPAREN args DPAREN

    IPAREN          shift and go to state 51
    NUM             shift and go to state 56
    ID              shift and go to state 59

    additiveExpression             shift and go to state 86
    term                           shift and go to state 50
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 85

state 66

    (43) relop -> MAYORI .

    IPAREN          reduce using rule 43 (relop -> MAYORI .)
    NUM             reduce using rule 43 (relop -> MAYORI .)
    ID              reduce using rule 43 (relop -> MAYORI .)


state 67

    (40) relop -> MENORI .

    IPAREN          reduce using rule 40 (relop -> MENORI .)
    NUM             reduce using rule 40 (relop -> MENORI .)
    ID              reduce using rule 40 (relop -> MENORI .)


state 68

    (44) relop -> IGUAL .

    IPAREN          reduce using rule 44 (relop -> IGUAL .)
    NUM             reduce using rule 44 (relop -> IGUAL .)
    ID              reduce using rule 44 (relop -> IGUAL .)


state 69

    (41) relop -> MENOR .

    IPAREN          reduce using rule 41 (relop -> MENOR .)
    NUM             reduce using rule 41 (relop -> MENOR .)
    ID              reduce using rule 41 (relop -> MENOR .)


state 70

    (49) addop -> RESTA .

    IPAREN          reduce using rule 49 (addop -> RESTA .)
    NUM             reduce using rule 49 (addop -> RESTA .)
    ID              reduce using rule 49 (addop -> RESTA .)


state 71

    (42) relop -> MAYOR .

    IPAREN          reduce using rule 42 (relop -> MAYOR .)
    NUM             reduce using rule 42 (relop -> MAYOR .)
    ID              reduce using rule 42 (relop -> MAYOR .)


state 72

    (48) addop -> SUMA .

    IPAREN          reduce using rule 48 (addop -> SUMA .)
    NUM             reduce using rule 48 (addop -> SUMA .)
    ID              reduce using rule 48 (addop -> SUMA .)


state 73

    (53) mulop -> DIVI .

    IPAREN          reduce using rule 53 (mulop -> DIVI .)
    NUM             reduce using rule 53 (mulop -> DIVI .)
    ID              reduce using rule 53 (mulop -> DIVI .)


state 74

    (52) mulop -> MULTI .

    IPAREN          reduce using rule 52 (mulop -> MULTI .)
    NUM             reduce using rule 52 (mulop -> MULTI .)
    ID              reduce using rule 52 (mulop -> MULTI .)


state 75

    (50) term -> term mulop . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (58) call -> . ID IPAREN args DPAREN

    IPAREN          shift and go to state 51
    NUM             shift and go to state 56
    ID              shift and go to state 59

    call                           shift and go to state 53
    factor                         shift and go to state 87
    var                            shift and go to state 85

state 76

    (54) factor -> IPAREN expression . DPAREN

    DPAREN          shift and go to state 88


state 77

    (34) expression -> var ASIGN . expression
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    expression                     shift and go to state 89

state 78

    (33) returnStmt -> RETURN expression PUNTOC .

    ELSE            reduce using rule 33 (returnStmt -> RETURN expression PUNTOC .)
    DLLAVE          reduce using rule 33 (returnStmt -> RETURN expression PUNTOC .)
    PUNTOC          reduce using rule 33 (returnStmt -> RETURN expression PUNTOC .)
    ILLAVE          reduce using rule 33 (returnStmt -> RETURN expression PUNTOC .)
    IF              reduce using rule 33 (returnStmt -> RETURN expression PUNTOC .)
    WHILE           reduce using rule 33 (returnStmt -> RETURN expression PUNTOC .)
    RETURN          reduce using rule 33 (returnStmt -> RETURN expression PUNTOC .)


state 79

    (37) var -> ID ICORCH . expression DCORCH
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    expression                     shift and go to state 90

state 80

    (58) call -> ID IPAREN . args DPAREN
    (59) args -> . argList
    (60) args -> . empty
    (61) argList -> . argList COMA expression
    (62) argList -> . expression
    (63) empty -> .
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    DPAREN          reduce using rule 63 (empty -> .)
    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    args                           shift and go to state 91
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    argList                        shift and go to state 92
    expression                     shift and go to state 93
    empty                          shift and go to state 94

state 81

    (29) selectionStmt -> IF IPAREN expression . DPAREN statement
    (30) selectionStmt -> IF IPAREN expression . DPAREN statement ELSE statement

    DPAREN          shift and go to state 95


state 82

    (31) iterationStmt -> WHILE IPAREN expression . DPAREN statement

    DPAREN          shift and go to state 96


state 83

    (27) expressionStmt -> statementList statement PUNTOC .

    ELSE            reduce using rule 27 (expressionStmt -> statementList statement PUNTOC .)
    DLLAVE          reduce using rule 27 (expressionStmt -> statementList statement PUNTOC .)
    PUNTOC          reduce using rule 27 (expressionStmt -> statementList statement PUNTOC .)
    ILLAVE          reduce using rule 27 (expressionStmt -> statementList statement PUNTOC .)
    IF              reduce using rule 27 (expressionStmt -> statementList statement PUNTOC .)
    WHILE           reduce using rule 27 (expressionStmt -> statementList statement PUNTOC .)
    RETURN          reduce using rule 27 (expressionStmt -> statementList statement PUNTOC .)


state 84

    (46) additiveExpression -> additiveExpression addop term .
    (50) term -> term . mulop factor
    (52) mulop -> . MULTI
    (53) mulop -> . DIVI

    MENORI          reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    MENOR           reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    MAYOR           reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    MAYORI          reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    IGUAL           reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    DIST            reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    SUMA            reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    RESTA           reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    COMA            reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    DPAREN          reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    DCORCH          reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    PUNTOC          reduce using rule 46 (additiveExpression -> additiveExpression addop term .)
    MULTI           shift and go to state 74
    DIVI            shift and go to state 73

    mulop                          shift and go to state 75

state 85

    (55) factor -> var .

    MULTI           reduce using rule 55 (factor -> var .)
    DIVI            reduce using rule 55 (factor -> var .)
    MENORI          reduce using rule 55 (factor -> var .)
    MENOR           reduce using rule 55 (factor -> var .)
    MAYOR           reduce using rule 55 (factor -> var .)
    MAYORI          reduce using rule 55 (factor -> var .)
    IGUAL           reduce using rule 55 (factor -> var .)
    DIST            reduce using rule 55 (factor -> var .)
    SUMA            reduce using rule 55 (factor -> var .)
    RESTA           reduce using rule 55 (factor -> var .)
    PUNTOC          reduce using rule 55 (factor -> var .)
    DPAREN          reduce using rule 55 (factor -> var .)
    DCORCH          reduce using rule 55 (factor -> var .)
    COMA            reduce using rule 55 (factor -> var .)


state 86

    (38) simpleExpression -> additiveExpression relop additiveExpression .
    (46) additiveExpression -> additiveExpression . addop term
    (48) addop -> . SUMA
    (49) addop -> . RESTA

    COMA            reduce using rule 38 (simpleExpression -> additiveExpression relop additiveExpression .)
    DPAREN          reduce using rule 38 (simpleExpression -> additiveExpression relop additiveExpression .)
    DCORCH          reduce using rule 38 (simpleExpression -> additiveExpression relop additiveExpression .)
    PUNTOC          reduce using rule 38 (simpleExpression -> additiveExpression relop additiveExpression .)
    SUMA            shift and go to state 72
    RESTA           shift and go to state 70

    addop                          shift and go to state 63

state 87

    (50) term -> term mulop factor .

    MULTI           reduce using rule 50 (term -> term mulop factor .)
    DIVI            reduce using rule 50 (term -> term mulop factor .)
    MENORI          reduce using rule 50 (term -> term mulop factor .)
    MENOR           reduce using rule 50 (term -> term mulop factor .)
    MAYOR           reduce using rule 50 (term -> term mulop factor .)
    MAYORI          reduce using rule 50 (term -> term mulop factor .)
    IGUAL           reduce using rule 50 (term -> term mulop factor .)
    DIST            reduce using rule 50 (term -> term mulop factor .)
    SUMA            reduce using rule 50 (term -> term mulop factor .)
    RESTA           reduce using rule 50 (term -> term mulop factor .)
    PUNTOC          reduce using rule 50 (term -> term mulop factor .)
    DPAREN          reduce using rule 50 (term -> term mulop factor .)
    DCORCH          reduce using rule 50 (term -> term mulop factor .)
    COMA            reduce using rule 50 (term -> term mulop factor .)


state 88

    (54) factor -> IPAREN expression DPAREN .

    MULTI           reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    DIVI            reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    MENORI          reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    MENOR           reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    MAYOR           reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    MAYORI          reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    IGUAL           reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    DIST            reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    SUMA            reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    RESTA           reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    PUNTOC          reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    DPAREN          reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    DCORCH          reduce using rule 54 (factor -> IPAREN expression DPAREN .)
    COMA            reduce using rule 54 (factor -> IPAREN expression DPAREN .)


state 89

    (34) expression -> var ASIGN expression .

    DPAREN          reduce using rule 34 (expression -> var ASIGN expression .)
    DCORCH          reduce using rule 34 (expression -> var ASIGN expression .)
    PUNTOC          reduce using rule 34 (expression -> var ASIGN expression .)
    COMA            reduce using rule 34 (expression -> var ASIGN expression .)


state 90

    (37) var -> ID ICORCH expression . DCORCH

    DCORCH          shift and go to state 97


state 91

    (58) call -> ID IPAREN args . DPAREN

    DPAREN          shift and go to state 98


state 92

    (59) args -> argList .
    (61) argList -> argList . COMA expression

    DPAREN          reduce using rule 59 (args -> argList .)
    COMA            shift and go to state 99


state 93

    (62) argList -> expression .

    COMA            reduce using rule 62 (argList -> expression .)
    DPAREN          reduce using rule 62 (argList -> expression .)


state 94

    (60) args -> empty .

    DPAREN          reduce using rule 60 (args -> empty .)


state 95

    (29) selectionStmt -> IF IPAREN expression DPAREN . statement
    (30) selectionStmt -> IF IPAREN expression DPAREN . statement ELSE statement
    (22) statement -> . expressionStmt
    (23) statement -> . compoundStmt
    (24) statement -> . selectionStmt
    (25) statement -> . iterationStmt
    (26) statement -> . returnStmt
    (27) expressionStmt -> . statementList statement PUNTOC
    (28) expressionStmt -> . PUNTOC
    (17) compoundStmt -> . ILLAVE localDeclarations statementList DLLAVE
    (29) selectionStmt -> . IF IPAREN expression DPAREN statement
    (30) selectionStmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (31) iterationStmt -> . WHILE IPAREN expression DPAREN statement
    (32) returnStmt -> . RETURN PUNTOC
    (33) returnStmt -> . RETURN expression PUNTOC
    (20) statementList -> . statementList statement
    (21) statementList -> . empty
    (63) empty -> .

  ! shift/reduce conflict for PUNTOC resolved as shift
  ! shift/reduce conflict for ILLAVE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    PUNTOC          shift and go to state 45
    ILLAVE          shift and go to state 26
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    RETURN          shift and go to state 36

  ! PUNTOC          [ reduce using rule 63 (empty -> .) ]
  ! ILLAVE          [ reduce using rule 63 (empty -> .) ]
  ! IF              [ reduce using rule 63 (empty -> .) ]
  ! WHILE           [ reduce using rule 63 (empty -> .) ]
  ! RETURN          [ reduce using rule 63 (empty -> .) ]

    selectionStmt                  shift and go to state 37
    statementList                  shift and go to state 41
    expressionStmt                 shift and go to state 42
    empty                          shift and go to state 35
    statement                      shift and go to state 100
    returnStmt                     shift and go to state 44
    compoundStmt                   shift and go to state 46
    iterationStmt                  shift and go to state 47

state 96

    (31) iterationStmt -> WHILE IPAREN expression DPAREN . statement
    (22) statement -> . expressionStmt
    (23) statement -> . compoundStmt
    (24) statement -> . selectionStmt
    (25) statement -> . iterationStmt
    (26) statement -> . returnStmt
    (27) expressionStmt -> . statementList statement PUNTOC
    (28) expressionStmt -> . PUNTOC
    (17) compoundStmt -> . ILLAVE localDeclarations statementList DLLAVE
    (29) selectionStmt -> . IF IPAREN expression DPAREN statement
    (30) selectionStmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (31) iterationStmt -> . WHILE IPAREN expression DPAREN statement
    (32) returnStmt -> . RETURN PUNTOC
    (33) returnStmt -> . RETURN expression PUNTOC
    (20) statementList -> . statementList statement
    (21) statementList -> . empty
    (63) empty -> .

  ! shift/reduce conflict for PUNTOC resolved as shift
  ! shift/reduce conflict for ILLAVE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    PUNTOC          shift and go to state 45
    ILLAVE          shift and go to state 26
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    RETURN          shift and go to state 36

  ! PUNTOC          [ reduce using rule 63 (empty -> .) ]
  ! ILLAVE          [ reduce using rule 63 (empty -> .) ]
  ! IF              [ reduce using rule 63 (empty -> .) ]
  ! WHILE           [ reduce using rule 63 (empty -> .) ]
  ! RETURN          [ reduce using rule 63 (empty -> .) ]

    selectionStmt                  shift and go to state 37
    statementList                  shift and go to state 41
    expressionStmt                 shift and go to state 42
    empty                          shift and go to state 35
    statement                      shift and go to state 101
    returnStmt                     shift and go to state 44
    compoundStmt                   shift and go to state 46
    iterationStmt                  shift and go to state 47

state 97

    (37) var -> ID ICORCH expression DCORCH .

    MULTI           reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    DIVI            reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    MENORI          reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    MENOR           reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    MAYOR           reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    MAYORI          reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    IGUAL           reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    DIST            reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    SUMA            reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    RESTA           reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    PUNTOC          reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    DPAREN          reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    DCORCH          reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    COMA            reduce using rule 37 (var -> ID ICORCH expression DCORCH .)
    ASIGN           reduce using rule 37 (var -> ID ICORCH expression DCORCH .)


state 98

    (58) call -> ID IPAREN args DPAREN .

    MULTI           reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    DIVI            reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    MENORI          reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    MENOR           reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    MAYOR           reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    MAYORI          reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    IGUAL           reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    DIST            reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    SUMA            reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    RESTA           reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    DPAREN          reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    COMA            reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    PUNTOC          reduce using rule 58 (call -> ID IPAREN args DPAREN .)
    DCORCH          reduce using rule 58 (call -> ID IPAREN args DPAREN .)


state 99

    (61) argList -> argList COMA . expression
    (34) expression -> . var ASIGN expression
    (35) expression -> . simpleExpression
    (36) var -> . ID
    (37) var -> . ID ICORCH expression DCORCH
    (38) simpleExpression -> . additiveExpression relop additiveExpression
    (39) simpleExpression -> . additiveExpression
    (46) additiveExpression -> . additiveExpression addop term
    (47) additiveExpression -> . term
    (50) term -> . term mulop factor
    (51) term -> . factor
    (54) factor -> . IPAREN expression DPAREN
    (55) factor -> . var
    (56) factor -> . call
    (57) factor -> . NUM
    (58) call -> . ID IPAREN args DPAREN

    ID              shift and go to state 59
    IPAREN          shift and go to state 51
    NUM             shift and go to state 56

    additiveExpression             shift and go to state 49
    term                           shift and go to state 50
    simpleExpression               shift and go to state 52
    call                           shift and go to state 53
    factor                         shift and go to state 54
    var                            shift and go to state 55
    expression                     shift and go to state 102

state 100

    (29) selectionStmt -> IF IPAREN expression DPAREN statement .
    (30) selectionStmt -> IF IPAREN expression DPAREN statement . ELSE statement

    PUNTOC          reduce using rule 29 (selectionStmt -> IF IPAREN expression DPAREN statement .)
    ILLAVE          reduce using rule 29 (selectionStmt -> IF IPAREN expression DPAREN statement .)
    IF              reduce using rule 29 (selectionStmt -> IF IPAREN expression DPAREN statement .)
    WHILE           reduce using rule 29 (selectionStmt -> IF IPAREN expression DPAREN statement .)
    RETURN          reduce using rule 29 (selectionStmt -> IF IPAREN expression DPAREN statement .)
    ELSE            reduce using rule 29 (selectionStmt -> IF IPAREN expression DPAREN statement .)
    DLLAVE          reduce using rule 29 (selectionStmt -> IF IPAREN expression DPAREN statement .)

  ! ELSE            [ shift and go to state 103 ]


state 101

    (31) iterationStmt -> WHILE IPAREN expression DPAREN statement .

    ELSE            reduce using rule 31 (iterationStmt -> WHILE IPAREN expression DPAREN statement .)
    DLLAVE          reduce using rule 31 (iterationStmt -> WHILE IPAREN expression DPAREN statement .)
    PUNTOC          reduce using rule 31 (iterationStmt -> WHILE IPAREN expression DPAREN statement .)
    ILLAVE          reduce using rule 31 (iterationStmt -> WHILE IPAREN expression DPAREN statement .)
    IF              reduce using rule 31 (iterationStmt -> WHILE IPAREN expression DPAREN statement .)
    WHILE           reduce using rule 31 (iterationStmt -> WHILE IPAREN expression DPAREN statement .)
    RETURN          reduce using rule 31 (iterationStmt -> WHILE IPAREN expression DPAREN statement .)


state 102

    (61) argList -> argList COMA expression .

    COMA            reduce using rule 61 (argList -> argList COMA expression .)
    DPAREN          reduce using rule 61 (argList -> argList COMA expression .)


state 103

    (30) selectionStmt -> IF IPAREN expression DPAREN statement ELSE . statement
    (22) statement -> . expressionStmt
    (23) statement -> . compoundStmt
    (24) statement -> . selectionStmt
    (25) statement -> . iterationStmt
    (26) statement -> . returnStmt
    (27) expressionStmt -> . statementList statement PUNTOC
    (28) expressionStmt -> . PUNTOC
    (17) compoundStmt -> . ILLAVE localDeclarations statementList DLLAVE
    (29) selectionStmt -> . IF IPAREN expression DPAREN statement
    (30) selectionStmt -> . IF IPAREN expression DPAREN statement ELSE statement
    (31) iterationStmt -> . WHILE IPAREN expression DPAREN statement
    (32) returnStmt -> . RETURN PUNTOC
    (33) returnStmt -> . RETURN expression PUNTOC
    (20) statementList -> . statementList statement
    (21) statementList -> . empty
    (63) empty -> .

  ! shift/reduce conflict for PUNTOC resolved as shift
  ! shift/reduce conflict for ILLAVE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    PUNTOC          shift and go to state 45
    ILLAVE          shift and go to state 26
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    RETURN          shift and go to state 36

  ! PUNTOC          [ reduce using rule 63 (empty -> .) ]
  ! ILLAVE          [ reduce using rule 63 (empty -> .) ]
  ! IF              [ reduce using rule 63 (empty -> .) ]
  ! WHILE           [ reduce using rule 63 (empty -> .) ]
  ! RETURN          [ reduce using rule 63 (empty -> .) ]

    selectionStmt                  shift and go to state 37
    statementList                  shift and go to state 41
    expressionStmt                 shift and go to state 42
    empty                          shift and go to state 35
    statement                      shift and go to state 104
    returnStmt                     shift and go to state 44
    compoundStmt                   shift and go to state 46
    iterationStmt                  shift and go to state 47

state 104

    (30) selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .

    PUNTOC          reduce using rule 30 (selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    ILLAVE          reduce using rule 30 (selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    IF              reduce using rule 30 (selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    WHILE           reduce using rule 30 (selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    RETURN          reduce using rule 30 (selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    ELSE            reduce using rule 30 (selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .)
    DLLAVE          reduce using rule 30 (selectionStmt -> IF IPAREN expression DPAREN statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOC in state 33 resolved as shift
WARNING: shift/reduce conflict for ILLAVE in state 33 resolved as shift
WARNING: shift/reduce conflict for IF in state 33 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 33 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 33 resolved as shift
WARNING: shift/reduce conflict for PUNTOC in state 41 resolved as shift
WARNING: shift/reduce conflict for ILLAVE in state 41 resolved as shift
WARNING: shift/reduce conflict for IF in state 41 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 41 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 41 resolved as shift
WARNING: shift/reduce conflict for PUNTOC in state 62 resolved as shift
WARNING: shift/reduce conflict for PUNTOC in state 95 resolved as shift
WARNING: shift/reduce conflict for ILLAVE in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 95 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 95 resolved as shift
WARNING: shift/reduce conflict for PUNTOC in state 96 resolved as shift
WARNING: shift/reduce conflict for ILLAVE in state 96 resolved as shift
WARNING: shift/reduce conflict for IF in state 96 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 96 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 96 resolved as shift
WARNING: shift/reduce conflict for PUNTOC in state 103 resolved as shift
WARNING: shift/reduce conflict for ILLAVE in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 103 resolved as shift
