digraph G {
	"program1" -> "function1: Void funcion"
	"function1: Void funcion" -> "compound_stmt1"
	"compound_stmt1" -> "var1: int a"
	"compound_stmt1" -> "assign1"
	"assign1" -> "var1: a"
	"assign1" -> "NUM1: 00"
	"compound_stmt1" -> "if_else1"
	"if_else1" -> "COMPARADOR1: =="
	"COMPARADOR1: ==" -> "NUM2: 00"
	"COMPARADOR1: ==" -> "NUM3: 00"
	"if_else1" -> "compound_stmt2"
	"compound_stmt2" -> "assign2"
	"assign2" -> "var2: a"
	"assign2" -> "NUM4: 04"
	"if_else1" -> "compound_stmt3"
	"compound_stmt3" -> "assign3"
	"assign3" -> "var3: a"
	"assign3" -> "NUM5: 05"
	"compound_stmt1" -> "while1"
	"while1" -> "COMPARADOR2: <>"
	"COMPARADOR2: <>" -> "var4: parametro"
	"COMPARADOR2: <>" -> "NUM6: 00"
	"while1" -> "compound_stmt4"
	"compound_stmt4" -> "assign4"
	"assign4" -> "var5: a"
	"assign4" -> "SIGNO1: +"
	"SIGNO1: +" -> "var6: a"
	"SIGNO1: +" -> "NUM7: 01"
	"compound_stmt4" -> "assign5"
	"assign5" -> "var7: parametro"
	"assign5" -> "SIGNO2: -"
	"SIGNO2: -" -> "var8: parametro"
	"SIGNO2: -" -> "NUM8: 01"
	"compound_stmt4" -> "if2"
	"if2" -> "COMPARADOR3: =="
	"COMPARADOR3: ==" -> "NUM9: 00"
	"COMPARADOR3: ==" -> "var9: a"
	"if2" -> "compound_stmt5"
	"compound_stmt5" -> "return1"
	"return1" -> "NUM10: 00"
	"function1: Void funcion" -> "param1: int[] parametro"
}