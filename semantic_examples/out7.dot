digraph G {
	"program1" -> "function1: void funcion1 : void"
	"function1: void funcion1 : void" -> "compound_stmt1"
	"compound_stmt1" -> "while1"
	"while1" -> "COMPARADOR1: < : ERROR"
	"COMPARADOR1: < : ERROR" -> "var1: a : void"
	"COMPARADOR1: < : ERROR" -> "NUM1: 23"
	"while1" -> "compound_stmt2"
	"compound_stmt2" -> "var1: void d1 : void"
	"compound_stmt2" -> "assign1 : ERROR"
	"assign1 : ERROR" -> "var2: d1 : void"
	"assign1 : ERROR" -> "SIGNO1: + : int"
	"SIGNO1: + : int" -> "NUM2: 02"
	"SIGNO1: + : int" -> "NUM3: 09"
	"compound_stmt1" -> "assign2 : ERROR"
	"assign2 : ERROR" -> "var3: d1 : ERROR"
	"assign2 : ERROR" -> "call1: fun : ERROR"
	"call1: fun : ERROR" -> "NUM4: 09"
	"function1: void funcion1 : void" -> "param1: void a[] : void"
	"program1" -> "function2: void fun : void"
	"function2: void fun : void" -> "compound_stmt3"
	"compound_stmt3" -> "assign3 : ERROR"
	"assign3 : ERROR" -> "var4: a : int"
	"assign3 : ERROR" -> "SIGNO2: + : ERROR"
	"SIGNO2: + : ERROR" -> "NUM5: 34"
	"SIGNO2: + : ERROR" -> "var5: dd : ERROR"
	"function2: void fun : void" -> "param2: int a[] : int"
	"function2: void fun : void" -> "param3: int d2[] : int"
}