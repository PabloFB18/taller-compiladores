digraph G {
	"program1" -> "function1: Void funcion : void"
	"function1: Void funcion : void" -> "compound_stmt1"
	"compound_stmt1" -> "var1: int a : int"
	"compound_stmt1" -> "assign1 : ERROR"
	"assign1 : ERROR" -> "var1: a : ERROR"
	"assign1 : ERROR" -> "NUM1: 00"
	"compound_stmt1" -> "if_else1"
	"if_else1" -> "COMPARADOR1: == : int"
	"COMPARADOR1: == : int" -> "NUM2: 00"
	"COMPARADOR1: == : int" -> "NUM3: 00"
	"if_else1" -> "compound_stmt2"
	"compound_stmt2" -> "assign2 : int"
	"assign2 : int" -> "var2: a : int"
	"assign2 : int" -> "NUM4: 04"
	"if_else1" -> "compound_stmt3"
	"compound_stmt3" -> "assign3 : int"
	"assign3 : int" -> "var3: a : int"
	"assign3 : int" -> "NUM5: 05"
	"compound_stmt1" -> "while1"
	"while1" -> "COMPARADOR2: <> : ERROR"
	"COMPARADOR2: <> : ERROR" -> "var4: parametro : ERROR"
	"COMPARADOR2: <> : ERROR" -> "NUM6: 00"
	"while1" -> "compound_stmt4"
	"compound_stmt4" -> "assign4 : int"
	"assign4 : int" -> "var5: a : int"
	"assign4 : int" -> "SIGNO1: + : int"
	"SIGNO1: + : int" -> "var6: a : int"
	"SIGNO1: + : int" -> "NUM7: 01"
	"compound_stmt4" -> "assign5 : ERROR"
	"assign5 : ERROR" -> "var7: parametro : ERROR"
	"assign5 : ERROR" -> "SIGNO2: - : ERROR"
	"SIGNO2: - : ERROR" -> "var8: parametro : ERROR"
	"SIGNO2: - : ERROR" -> "NUM8: 01"
	"compound_stmt4" -> "if2"
	"if2" -> "COMPARADOR3: == : int"
	"COMPARADOR3: == : int" -> "NUM9: 00"
	"COMPARADOR3: == : int" -> "var9: a : int"
	"if2" -> "compound_stmt5"
	"compound_stmt5" -> "return1 : int"
	"return1 : int" -> "NUM10: 00"
	"function1: Void funcion : void" -> "param1: int parametro[] : int"
}