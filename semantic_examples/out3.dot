digraph G {
	"program1" -> "function1: void sum : void"
	"function1: void sum : void" -> "compound_stmt1"
	"compound_stmt1" -> "return1 : ERROR"
	"return1 : ERROR" -> "SIGNO1: + : ERROR"
	"SIGNO1: + : ERROR" -> "SIGNO2: + : ERROR"
	"SIGNO2: + : ERROR" -> "var1: e_2 : ERROR"
	"SIGNO2: + : ERROR" -> "var2: e_3 : ERROR"
	"SIGNO1: + : ERROR" -> "var3: e_4 : ERROR"
	"function1: void sum : void" -> "param1: int e_2[] : int"
	"function1: void sum : void" -> "param2: int e_3[] : int"
	"function1: void sum : void" -> "param3: int e_4[] : int"
	"program1" -> "function2: void main : void"
	"function2: void main : void" -> "compound_stmt2"
	"compound_stmt2" -> "var1: int a : int"
	"compound_stmt2" -> "var2: int b : int"
	"compound_stmt2" -> "var3: int c : int"
	"compound_stmt2" -> "assign1 : ERROR"
	"assign1 : ERROR" -> "var4: a : ERROR"
	"assign1 : ERROR" -> "NUM1: 01"
	"compound_stmt2" -> "assign2 : ERROR"
	"assign2 : ERROR" -> "var5: b : ERROR"
	"assign2 : ERROR" -> "NUM2: 02"
	"compound_stmt2" -> "assign3 : ERROR"
	"assign3 : ERROR" -> "var6: c : ERROR"
	"assign3 : ERROR" -> "NUM3: 03"
	"compound_stmt2" -> "call1: sum : void"
	"call1: sum : void" -> "var7: a : int"
	"call1: sum : void" -> "var8: b : int"
	"call1: sum : void" -> "var9: c : int"
}